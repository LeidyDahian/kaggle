{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOzubgJr0DvSNfwZz8beJV6",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/LeidyDahian/kaggle/blob/main/04%20-%20modelo%20con%20preprocesado%20por%20moda%20y%20catboost.ipynb%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 194
        },
        "id": "MxPHb6mHoxzL",
        "outputId": "0a9f70a6-60ef-4bd6-fc92-afd8a4b9d31b"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-f0c270f5-0f27-4b95-80a5-4a1664bb7d7c\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-f0c270f5-0f27-4b95-80a5-4a1664bb7d7c\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving kaggle.json to kaggle.json\n",
            "Downloading udea-ai-4-eng-20251-pruebas-saber-pro-colombia.zip to /content\n",
            "  0% 0.00/29.9M [00:00<?, ?B/s]\n",
            "100% 29.9M/29.9M [00:00<00:00, 1.34GB/s]\n",
            "Archive:  udea-ai-4-eng-20251-pruebas-saber-pro-colombia.zip\n",
            "  inflating: submission_example.csv  \n",
            "  inflating: test.csv                \n",
            "  inflating: train.csv               \n"
          ]
        }
      ],
      "source": [
        "from google.colab import files\n",
        "# Carga el archivo kaggle.json\n",
        "files.upload()\n",
        "\n",
        "!mkdir -p ~/.kaggle\n",
        "!cp kaggle.json ~/.kaggle/\n",
        "!chmod 600 ~/.kaggle/kaggle.json\n",
        "!python -m pip install -qq kaggle\n",
        "!kaggle competitions download -c udea-ai-4-eng-20251-pruebas-saber-pro-colombia\n",
        "!unzip udea-ai-4-eng-20251-pruebas-saber-pro-colombia.zip"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import re\n",
        "%matplotlib inline\n",
        "from sklearn.preprocessing import OneHotEncoder\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import accuracy_score\n"
      ],
      "metadata": {
        "id": "nXMmWHSjs5B7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install catboost"
      ],
      "metadata": {
        "id": "bNWdyaNG5ysm",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "12fc9b7a-6793-4c1a-8921-5eb5019ac90a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting catboost\n",
            "  Downloading catboost-1.2.8-cp311-cp311-manylinux2014_x86_64.whl.metadata (1.2 kB)\n",
            "Requirement already satisfied: graphviz in /usr/local/lib/python3.11/dist-packages (from catboost) (0.21)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (from catboost) (3.10.0)\n",
            "Requirement already satisfied: numpy<3.0,>=1.16.0 in /usr/local/lib/python3.11/dist-packages (from catboost) (2.0.2)\n",
            "Requirement already satisfied: pandas>=0.24 in /usr/local/lib/python3.11/dist-packages (from catboost) (2.2.2)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.11/dist-packages (from catboost) (1.15.3)\n",
            "Requirement already satisfied: plotly in /usr/local/lib/python3.11/dist-packages (from catboost) (5.24.1)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.11/dist-packages (from catboost) (1.17.0)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.24->catboost) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.24->catboost) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.24->catboost) (2025.2)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (1.3.2)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (4.58.4)\n",
            "Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (1.4.8)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (24.2)\n",
            "Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (11.2.1)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (3.2.3)\n",
            "Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.11/dist-packages (from plotly->catboost) (8.5.0)\n",
            "Downloading catboost-1.2.8-cp311-cp311-manylinux2014_x86_64.whl (99.2 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m99.2/99.2 MB\u001b[0m \u001b[31m9.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: catboost\n",
            "Successfully installed catboost-1.2.8\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test_df = pd.read_csv('/content/test.csv', encoding= 'utf-8')\n",
        "df = pd.read_csv('/content/train.csv', encoding= 'utf-8')"
      ],
      "metadata": {
        "id": "wWwoyAIqo_uJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Preprocesado"
      ],
      "metadata": {
        "id": "jcsHrH0t56pK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "El preprocesamiento implementado es el mismo que el modelo 03, manteniendo la limpieza de la columna PROGRAMA como en versiones anteriores. En este caso, las columnas categóricas y numéricas con valores faltantes fueron completadas utilizando la moda de cada una. Además, se eliminaron columnas irrelevantes y duplicadas como ESTU_PRIVADO_LIBERTAD y la repetida FAMI_TIENEINTERNET.1. Para facilitar su manipulación, se renombraron las columnas, se convirtieron los valores booleanos a binarios, y se aplicó codificación One-Hot a todas las variables categóricas seleccionadas. Finalmente, la variable RENDIMIENTO_GLOBAL fue transformada a un valor ordinal, permitiendo su uso en modelos supervisados que requieren variables numéricas."
      ],
      "metadata": {
        "id": "6kmjWdVM6bQ0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def Preprocesar(df):\n",
        "  def obtener_primera_frase(cadena):\n",
        "    return cadena.split(' ', 1)[0]\n",
        "\n",
        "  def quitar_tildes(palabra):\n",
        "    return re.sub(r'[ÁÉÍÓÚ]', lambda x: {'Á': 'A', 'É': 'E', 'Í': 'I', 'Ó': 'O', 'Ú': 'U'}[x.group()], palabra)\n",
        "\n",
        "  df['ESTU_PRGM_ACADEMICO'] = df['ESTU_PRGM_ACADEMICO'].apply(obtener_primera_frase)\n",
        "  df['ESTU_PRGM_ACADEMICO'] = df['ESTU_PRGM_ACADEMICO'].apply(quitar_tildes)\n",
        "\n",
        "  reemplazos = {\n",
        "      'ADMINISTRACION': ['ADMINISTRACION', 'ADMINISTRACI¿N', 'ADMINISTRACIÒN', 'ADMINISTRACIÓN', 'ADMINSITRACION', 'ADMINSITRACIÓN'],\n",
        "      'ANTROPOLOGIA': ['ANTROPOLOGIA', 'ANTROPOLOGÍA'],\n",
        "      'ARTES': ['ARTE', 'ARTES','BELLAS','ANIMACION'],\n",
        "      'BIOINGENIERIA': ['BIOINGENIERIA', 'BIOINGENIERÍA'],\n",
        "      'BIOLOGIA': ['BIOLOGIA', 'BIOLOGÍA'],\n",
        "      'COMUNICACION': ['COMUNICACION', 'COMUNICACIONES', 'COMUNICACI¿N', 'COMUNICACIÓN', 'COMUNICACIÖN'],\n",
        "      'CONSTRUCCION': ['CONSTRUCCION', 'CONSTRUCCIONES'],\n",
        "      'CONTADURIA': ['CONTADURIA', 'CONTADURÍA'],\n",
        "      'DISEÑO': ['DISENO', 'DISE¿O', 'DISE¿¿O', 'DISEÑO'],\n",
        "      'ECOLOGIA': ['ECOLOGIA', 'ECOLOGÍA'],\n",
        "      'ECONOMIA': ['ECONOM¿A'],\n",
        "      'GEOLOGIA': ['GEOLOG¿A'],\n",
        "      'GERENCIA': ['GERONTOLOGIA'],\n",
        "      'INGENIERIA': ['INGENIER¿A', 'INGENIERÌA', 'INGENIIERIA','AGROINDUSTRIA'],\n",
        "      'INSTRUMENTACION': ['INTRUMENTACION'],\n",
        "      'MATEMATICAS': ['MATEMATICA'],\n",
        "      'MARKETING': ['MERCADEO', 'MERCADOLOGIA'],\n",
        "      'PSICOLOGIA': ['PSICOLOGA'],\n",
        "      'QUIMICA': ['QUIMICA.', 'QU¿MICA'],\n",
        "      'MUSICA': ['MUSICA-'],\n",
        "      'TERAPIAS': ['TERAPIA', 'TERAPIAS'],\n",
        "      'GESTION': ['GESTI¿N'],\n",
        "      'NEGOCIOS' : ['3°'],\n",
        "      'DEPORTE' : ['ACTIVIDAD'],\n",
        "      'LICENCIATURA' : ['Licenciatura','LICENC.EN'],\n",
        "      'LENGUAS' :['LENGUAJES']\n",
        "\n",
        "  }\n",
        "\n",
        "  for key, values in reemplazos.items():\n",
        "      df['ESTU_PRGM_ACADEMICO'] = df['ESTU_PRGM_ACADEMICO'].replace(values, key)\n",
        "\n",
        "  ##Eliminar columnas\n",
        "\n",
        "  df = df.drop(labels =['ESTU_PRIVADO_LIBERTAD','FAMI_TIENEINTERNET.1', 'coef_1', 'coef_2', 'coef_3', 'coef_4'],axis= 1)\n",
        "\n",
        "  if 'RENDIMIENTO_GLOBAL' in df.columns:\n",
        "    df.columns = ['ID','PERIODO','PROGRAMA','DEPARTAMENTO','VALOR_MATRICULA','HORAS_TRABAJA','ESTRATO','TIENE_INTERNET','EDUCACION_PADRE','TIENE_LAVADORA','TIENE_AUTO','PAGA_MATRICULA','TIENE_COMPUTADOR','EDUCACION_MADRE','RENDIMIENTO_GLOBAL']\n",
        "  else:\n",
        "    df.columns = ['ID','PERIODO','PROGRAMA','DEPARTAMENTO','VALOR_MATRICULA','HORAS_TRABAJA','ESTRATO','TIENE_INTERNET','EDUCACION_PADRE','TIENE_LAVADORA','TIENE_AUTO','PAGA_MATRICULA','TIENE_COMPUTADOR','EDUCACION_MADRE']\n",
        "\n",
        "  ##Convertir a binario\n",
        "\n",
        "  def convertir_num(valor):\n",
        "      if valor == 'Si':\n",
        "          return 1\n",
        "      elif valor == 'No':\n",
        "          return 0\n",
        "      else:\n",
        "          return valor\n",
        "\n",
        "  # Aplicar la función a todas las columnas del DataFrame\n",
        "  df = df.applymap(convertir_num)\n",
        "\n",
        "  ##Imputar Datos\n",
        "\n",
        "  df['ESTRATO'] = df['ESTRATO'].str.replace('Estrato ', '')\n",
        "\n",
        "  columnas_binarias = ['TIENE_INTERNET', 'TIENE_LAVADORA', 'TIENE_AUTO',\n",
        "                        'PAGA_MATRICULA', 'TIENE_COMPUTADOR']\n",
        "\n",
        "  for columna in columnas_binarias:\n",
        "      moda = df[columna].mode()[0]\n",
        "      df[columna].fillna(moda, inplace=True)\n",
        "\n",
        "\n",
        "  ModaEstrato = df['ESTRATO'].mode()[0]  # Obtener la moda\n",
        "  df['ESTRATO'].fillna(ModaEstrato, inplace=True)\n",
        "\n",
        "  ModaPadre = df['EDUCACION_PADRE'].mode()[0]\n",
        "  df['EDUCACION_PADRE'].fillna(ModaPadre, inplace=True)\n",
        "\n",
        "  ModaMadre = df['EDUCACION_MADRE'].mode()[0]\n",
        "  df['EDUCACION_MADRE'].fillna(ModaMadre, inplace=True)\n",
        "\n",
        "  ValorMatricula = df['VALOR_MATRICULA'].mode()[0]\n",
        "  df['VALOR_MATRICULA'].fillna(ValorMatricula, inplace=True)\n",
        "\n",
        "  HorasTrabaja = df['HORAS_TRABAJA'].mode()[0]\n",
        "  df['HORAS_TRABAJA'].fillna(HorasTrabaja, inplace=True)\n",
        "\n",
        "  ##Convertir columnas categoricas\n",
        "  Columnas_categoricas = [\"VALOR_MATRICULA\",\"PROGRAMA\",\"DEPARTAMENTO\",\"EDUCACION_MADRE\",\"EDUCACION_PADRE\"]\n",
        "\n",
        "  df[Columnas_categoricas] = df[Columnas_categoricas].astype(\"category\")\n",
        "\n",
        "  valores_rendimiento = {'alto': 4,'medio-alto': 3,'medio-bajo':2, 'bajo': 1}\n",
        "  df= df.replace(valores_rendimiento)\n",
        "\n",
        "  ##Convertir a Onehot\n",
        "  encoder = OneHotEncoder(sparse_output=False)\n",
        "\n",
        "  encoded_columns = encoder.fit_transform(df[['HORAS_TRABAJA','PERIODO','VALOR_MATRICULA','PROGRAMA','DEPARTAMENTO','ESTRATO','EDUCACION_PADRE','EDUCACION_MADRE']])\n",
        "\n",
        "  feature_names = encoder.get_feature_names_out(['HORAS_TRABAJA','PERIODO', 'VALOR_MATRICULA','PROGRAMA','DEPARTAMENTO','ESTRATO','EDUCACION_PADRE','EDUCACION_MADRE'])\n",
        "\n",
        "  one_hot_encoded_df = pd.DataFrame(encoded_columns, columns=feature_names)\n",
        "\n",
        "  df = pd.concat([df, one_hot_encoded_df], axis=1)\n",
        "\n",
        "  df = df.drop(labels =['HORAS_TRABAJA', 'PERIODO','VALOR_MATRICULA','PROGRAMA','DEPARTAMENTO','ESTRATO','EDUCACION_PADRE','EDUCACION_MADRE'],axis= 1)\n",
        "\n",
        "  return df\n",
        "\n"
      ],
      "metadata": {
        "id": "81W7yLBZqbSc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = Preprocesar(df)\n",
        "test_df = Preprocesar(test_df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qw8CvLtZ3eUr",
        "outputId": "7ac50ac4-2edb-4f5e-8835-28170931d99f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-5-4125685696.py:64: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.\n",
            "  df = df.applymap(convertir_num)\n",
            "/tmp/ipython-input-5-4125685696.py:75: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df[columna].fillna(moda, inplace=True)\n",
            "/tmp/ipython-input-5-4125685696.py:79: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['ESTRATO'].fillna(ModaEstrato, inplace=True)\n",
            "/tmp/ipython-input-5-4125685696.py:82: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['EDUCACION_PADRE'].fillna(ModaPadre, inplace=True)\n",
            "/tmp/ipython-input-5-4125685696.py:85: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['EDUCACION_MADRE'].fillna(ModaMadre, inplace=True)\n",
            "/tmp/ipython-input-5-4125685696.py:88: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['VALOR_MATRICULA'].fillna(ValorMatricula, inplace=True)\n",
            "/tmp/ipython-input-5-4125685696.py:91: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['HORAS_TRABAJA'].fillna(HorasTrabaja, inplace=True)\n",
            "/tmp/ipython-input-5-4125685696.py:99: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
            "  df= df.replace(valores_rendimiento)\n",
            "/tmp/ipython-input-5-4125685696.py:64: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.\n",
            "  df = df.applymap(convertir_num)\n",
            "/tmp/ipython-input-5-4125685696.py:75: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df[columna].fillna(moda, inplace=True)\n",
            "/tmp/ipython-input-5-4125685696.py:79: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['ESTRATO'].fillna(ModaEstrato, inplace=True)\n",
            "/tmp/ipython-input-5-4125685696.py:82: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['EDUCACION_PADRE'].fillna(ModaPadre, inplace=True)\n",
            "/tmp/ipython-input-5-4125685696.py:85: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['EDUCACION_MADRE'].fillna(ModaMadre, inplace=True)\n",
            "/tmp/ipython-input-5-4125685696.py:88: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['VALOR_MATRICULA'].fillna(ValorMatricula, inplace=True)\n",
            "/tmp/ipython-input-5-4125685696.py:91: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['HORAS_TRABAJA'].fillna(HorasTrabaja, inplace=True)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "N8ua5TlbHJ3Q",
        "outputId": "b6181536-7878-435f-f023-d001fe6413f2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ID                                                      0\n",
            "TIENE_INTERNET                                          0\n",
            "TIENE_LAVADORA                                          0\n",
            "TIENE_AUTO                                              0\n",
            "PAGA_MATRICULA                                          0\n",
            "                                                       ..\n",
            "EDUCACION_MADRE_Primaria incompleta                     0\n",
            "EDUCACION_MADRE_Secundaria (Bachillerato) completa      0\n",
            "EDUCACION_MADRE_Secundaria (Bachillerato) incompleta    0\n",
            "EDUCACION_MADRE_Técnica o tecnológica completa          0\n",
            "EDUCACION_MADRE_Técnica o tecnológica incompleta        0\n",
            "Length: 199, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "print(df.isnull().sum())"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conclusiones\n",
        "\n",
        "Este modelo mostró un desempeño muy favorable desde su implementación inicial. La solución final se desarrolló utilizando este mismo modelo, pero acompañado de un preprocesamiento optimizado, el cual ofreció mejores resultados al momento de realizar las predicciones y subirlas a la plataforma de Kaggle."
      ],
      "metadata": {
        "id": "XeAQjg7swPSb"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "mZvlCf9C8T0s",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ed0dc21b-ad10-4685-d2a4-5f70f49bcb72"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0:\tlearn: 1.3690886\ttotal: 508ms\tremaining: 12m 42s\n",
            "1:\tlearn: 1.3561118\ttotal: 895ms\tremaining: 11m 10s\n",
            "2:\tlearn: 1.3451655\ttotal: 1.16s\tremaining: 9m 39s\n",
            "3:\tlearn: 1.3361808\ttotal: 1.31s\tremaining: 8m 11s\n",
            "4:\tlearn: 1.3288387\ttotal: 1.47s\tremaining: 7m 19s\n",
            "5:\tlearn: 1.3223204\ttotal: 1.61s\tremaining: 6m 42s\n",
            "6:\tlearn: 1.3168388\ttotal: 1.82s\tremaining: 6m 28s\n",
            "7:\tlearn: 1.3116401\ttotal: 2.15s\tremaining: 6m 41s\n",
            "8:\tlearn: 1.3071886\ttotal: 2.51s\tremaining: 6m 55s\n",
            "9:\tlearn: 1.3032630\ttotal: 2.92s\tremaining: 7m 15s\n",
            "10:\tlearn: 1.3000165\ttotal: 3.22s\tremaining: 7m 15s\n",
            "11:\tlearn: 1.2968465\ttotal: 3.51s\tremaining: 7m 15s\n",
            "12:\tlearn: 1.2935124\ttotal: 3.8s\tremaining: 7m 15s\n",
            "13:\tlearn: 1.2909711\ttotal: 3.98s\tremaining: 7m 2s\n",
            "14:\tlearn: 1.2886783\ttotal: 4.13s\tremaining: 6m 49s\n",
            "15:\tlearn: 1.2862716\ttotal: 4.29s\tremaining: 6m 38s\n",
            "16:\tlearn: 1.2842612\ttotal: 4.45s\tremaining: 6m 27s\n",
            "17:\tlearn: 1.2822710\ttotal: 4.59s\tremaining: 6m 18s\n",
            "18:\tlearn: 1.2801243\ttotal: 4.75s\tremaining: 6m 10s\n",
            "19:\tlearn: 1.2782885\ttotal: 4.89s\tremaining: 6m 2s\n",
            "20:\tlearn: 1.2766828\ttotal: 5.05s\tremaining: 5m 55s\n",
            "21:\tlearn: 1.2752715\ttotal: 5.2s\tremaining: 5m 49s\n",
            "22:\tlearn: 1.2733000\ttotal: 5.36s\tremaining: 5m 44s\n",
            "23:\tlearn: 1.2720386\ttotal: 5.52s\tremaining: 5m 39s\n",
            "24:\tlearn: 1.2708456\ttotal: 5.67s\tremaining: 5m 34s\n",
            "25:\tlearn: 1.2695343\ttotal: 5.81s\tremaining: 5m 29s\n",
            "26:\tlearn: 1.2681753\ttotal: 5.99s\tremaining: 5m 26s\n",
            "27:\tlearn: 1.2670323\ttotal: 6.15s\tremaining: 5m 23s\n",
            "28:\tlearn: 1.2660664\ttotal: 6.3s\tremaining: 5m 19s\n",
            "29:\tlearn: 1.2649929\ttotal: 6.45s\tremaining: 5m 16s\n",
            "30:\tlearn: 1.2639736\ttotal: 6.62s\tremaining: 5m 13s\n",
            "31:\tlearn: 1.2628561\ttotal: 6.75s\tremaining: 5m 9s\n",
            "32:\tlearn: 1.2621040\ttotal: 6.91s\tremaining: 5m 7s\n",
            "33:\tlearn: 1.2613474\ttotal: 7.07s\tremaining: 5m 4s\n",
            "34:\tlearn: 1.2604972\ttotal: 7.22s\tremaining: 5m 2s\n",
            "35:\tlearn: 1.2597941\ttotal: 7.36s\tremaining: 4m 59s\n",
            "36:\tlearn: 1.2588953\ttotal: 7.5s\tremaining: 4m 56s\n",
            "37:\tlearn: 1.2580739\ttotal: 7.66s\tremaining: 4m 54s\n",
            "38:\tlearn: 1.2574808\ttotal: 7.8s\tremaining: 4m 52s\n",
            "39:\tlearn: 1.2568938\ttotal: 7.94s\tremaining: 4m 49s\n",
            "40:\tlearn: 1.2562398\ttotal: 8.12s\tremaining: 4m 49s\n",
            "41:\tlearn: 1.2557485\ttotal: 8.26s\tremaining: 4m 46s\n",
            "42:\tlearn: 1.2552420\ttotal: 8.41s\tremaining: 4m 45s\n",
            "43:\tlearn: 1.2547308\ttotal: 8.56s\tremaining: 4m 43s\n",
            "44:\tlearn: 1.2542332\ttotal: 8.7s\tremaining: 4m 41s\n",
            "45:\tlearn: 1.2535965\ttotal: 8.85s\tremaining: 4m 39s\n",
            "46:\tlearn: 1.2532061\ttotal: 9s\tremaining: 4m 38s\n",
            "47:\tlearn: 1.2527241\ttotal: 9.15s\tremaining: 4m 36s\n",
            "48:\tlearn: 1.2521231\ttotal: 9.29s\tremaining: 4m 35s\n",
            "49:\tlearn: 1.2516096\ttotal: 9.43s\tremaining: 4m 33s\n",
            "50:\tlearn: 1.2511131\ttotal: 9.57s\tremaining: 4m 31s\n",
            "51:\tlearn: 1.2503864\ttotal: 9.72s\tremaining: 4m 30s\n",
            "52:\tlearn: 1.2499289\ttotal: 9.88s\tremaining: 4m 29s\n",
            "53:\tlearn: 1.2494394\ttotal: 10s\tremaining: 4m 28s\n",
            "54:\tlearn: 1.2490633\ttotal: 10.2s\tremaining: 4m 27s\n",
            "55:\tlearn: 1.2484930\ttotal: 10.3s\tremaining: 4m 26s\n",
            "56:\tlearn: 1.2481246\ttotal: 10.5s\tremaining: 4m 25s\n",
            "57:\tlearn: 1.2477655\ttotal: 10.6s\tremaining: 4m 23s\n",
            "58:\tlearn: 1.2471232\ttotal: 10.8s\tremaining: 4m 22s\n",
            "59:\tlearn: 1.2467040\ttotal: 10.9s\tremaining: 4m 21s\n",
            "60:\tlearn: 1.2462591\ttotal: 11.1s\tremaining: 4m 21s\n",
            "61:\tlearn: 1.2459263\ttotal: 11.2s\tremaining: 4m 20s\n",
            "62:\tlearn: 1.2456359\ttotal: 11.3s\tremaining: 4m 18s\n",
            "63:\tlearn: 1.2453499\ttotal: 11.5s\tremaining: 4m 17s\n",
            "64:\tlearn: 1.2450407\ttotal: 11.6s\tremaining: 4m 16s\n",
            "65:\tlearn: 1.2447358\ttotal: 11.7s\tremaining: 4m 14s\n",
            "66:\tlearn: 1.2444175\ttotal: 11.9s\tremaining: 4m 14s\n",
            "67:\tlearn: 1.2441338\ttotal: 12s\tremaining: 4m 13s\n",
            "68:\tlearn: 1.2438461\ttotal: 12.2s\tremaining: 4m 12s\n",
            "69:\tlearn: 1.2435322\ttotal: 12.3s\tremaining: 4m 11s\n",
            "70:\tlearn: 1.2432378\ttotal: 12.4s\tremaining: 4m 10s\n",
            "71:\tlearn: 1.2430190\ttotal: 12.6s\tremaining: 4m 9s\n",
            "72:\tlearn: 1.2426466\ttotal: 12.7s\tremaining: 4m 8s\n",
            "73:\tlearn: 1.2423689\ttotal: 12.9s\tremaining: 4m 7s\n",
            "74:\tlearn: 1.2421076\ttotal: 13s\tremaining: 4m 6s\n",
            "75:\tlearn: 1.2418694\ttotal: 13.1s\tremaining: 4m 6s\n",
            "76:\tlearn: 1.2415540\ttotal: 13.3s\tremaining: 4m 5s\n",
            "77:\tlearn: 1.2412509\ttotal: 13.4s\tremaining: 4m 4s\n",
            "78:\tlearn: 1.2410062\ttotal: 13.6s\tremaining: 4m 4s\n",
            "79:\tlearn: 1.2407508\ttotal: 13.7s\tremaining: 4m 3s\n",
            "80:\tlearn: 1.2404688\ttotal: 13.9s\tremaining: 4m 3s\n",
            "81:\tlearn: 1.2403080\ttotal: 14.1s\tremaining: 4m 3s\n",
            "82:\tlearn: 1.2400378\ttotal: 14.4s\tremaining: 4m 5s\n",
            "83:\tlearn: 1.2398227\ttotal: 14.7s\tremaining: 4m 7s\n",
            "84:\tlearn: 1.2395455\ttotal: 15s\tremaining: 4m 9s\n",
            "85:\tlearn: 1.2393442\ttotal: 15.3s\tremaining: 4m 11s\n",
            "86:\tlearn: 1.2390420\ttotal: 15.4s\tremaining: 4m 10s\n",
            "87:\tlearn: 1.2388493\ttotal: 15.6s\tremaining: 4m 9s\n",
            "88:\tlearn: 1.2386082\ttotal: 15.7s\tremaining: 4m 9s\n",
            "89:\tlearn: 1.2384091\ttotal: 15.9s\tremaining: 4m 8s\n",
            "90:\tlearn: 1.2382156\ttotal: 16s\tremaining: 4m 7s\n",
            "91:\tlearn: 1.2379953\ttotal: 16.1s\tremaining: 4m 7s\n",
            "92:\tlearn: 1.2378179\ttotal: 16.3s\tremaining: 4m 6s\n",
            "93:\tlearn: 1.2375756\ttotal: 16.4s\tremaining: 4m 5s\n",
            "94:\tlearn: 1.2373967\ttotal: 16.6s\tremaining: 4m 5s\n",
            "95:\tlearn: 1.2372259\ttotal: 16.7s\tremaining: 4m 4s\n",
            "96:\tlearn: 1.2370643\ttotal: 16.8s\tremaining: 4m 3s\n",
            "97:\tlearn: 1.2369154\ttotal: 17s\tremaining: 4m 3s\n",
            "98:\tlearn: 1.2367453\ttotal: 17.1s\tremaining: 4m 2s\n",
            "99:\tlearn: 1.2365617\ttotal: 17.2s\tremaining: 4m 1s\n",
            "100:\tlearn: 1.2363381\ttotal: 17.4s\tremaining: 4m\n",
            "101:\tlearn: 1.2361717\ttotal: 17.5s\tremaining: 4m\n",
            "102:\tlearn: 1.2360374\ttotal: 17.6s\tremaining: 3m 59s\n",
            "103:\tlearn: 1.2358932\ttotal: 17.8s\tremaining: 3m 58s\n",
            "104:\tlearn: 1.2357349\ttotal: 17.9s\tremaining: 3m 58s\n",
            "105:\tlearn: 1.2355545\ttotal: 18.1s\tremaining: 3m 57s\n",
            "106:\tlearn: 1.2353968\ttotal: 18.2s\tremaining: 3m 56s\n",
            "107:\tlearn: 1.2352193\ttotal: 18.4s\tremaining: 3m 56s\n",
            "108:\tlearn: 1.2349216\ttotal: 18.5s\tremaining: 3m 56s\n",
            "109:\tlearn: 1.2347774\ttotal: 18.6s\tremaining: 3m 55s\n",
            "110:\tlearn: 1.2346583\ttotal: 18.8s\tremaining: 3m 55s\n",
            "111:\tlearn: 1.2344984\ttotal: 18.9s\tremaining: 3m 54s\n",
            "112:\tlearn: 1.2343242\ttotal: 19.1s\tremaining: 3m 53s\n",
            "113:\tlearn: 1.2341679\ttotal: 19.2s\tremaining: 3m 53s\n",
            "114:\tlearn: 1.2339215\ttotal: 19.3s\tremaining: 3m 52s\n",
            "115:\tlearn: 1.2338024\ttotal: 19.5s\tremaining: 3m 52s\n",
            "116:\tlearn: 1.2336901\ttotal: 19.6s\tremaining: 3m 51s\n",
            "117:\tlearn: 1.2335067\ttotal: 19.7s\tremaining: 3m 51s\n",
            "118:\tlearn: 1.2332277\ttotal: 19.9s\tremaining: 3m 50s\n",
            "119:\tlearn: 1.2331183\ttotal: 20s\tremaining: 3m 49s\n",
            "120:\tlearn: 1.2328875\ttotal: 20.1s\tremaining: 3m 49s\n",
            "121:\tlearn: 1.2327640\ttotal: 20.3s\tremaining: 3m 48s\n",
            "122:\tlearn: 1.2326323\ttotal: 20.4s\tremaining: 3m 48s\n",
            "123:\tlearn: 1.2324962\ttotal: 20.6s\tremaining: 3m 48s\n",
            "124:\tlearn: 1.2323771\ttotal: 20.7s\tremaining: 3m 47s\n",
            "125:\tlearn: 1.2322332\ttotal: 20.8s\tremaining: 3m 47s\n",
            "126:\tlearn: 1.2320303\ttotal: 21s\tremaining: 3m 47s\n",
            "127:\tlearn: 1.2318663\ttotal: 21.1s\tremaining: 3m 46s\n",
            "128:\tlearn: 1.2317705\ttotal: 21.3s\tremaining: 3m 46s\n",
            "129:\tlearn: 1.2314786\ttotal: 21.4s\tremaining: 3m 45s\n",
            "130:\tlearn: 1.2312792\ttotal: 21.6s\tremaining: 3m 45s\n",
            "131:\tlearn: 1.2311005\ttotal: 21.7s\tremaining: 3m 44s\n",
            "132:\tlearn: 1.2310111\ttotal: 21.8s\tremaining: 3m 44s\n",
            "133:\tlearn: 1.2307494\ttotal: 22s\tremaining: 3m 44s\n",
            "134:\tlearn: 1.2306286\ttotal: 22.1s\tremaining: 3m 43s\n",
            "135:\tlearn: 1.2305257\ttotal: 22.3s\tremaining: 3m 43s\n",
            "136:\tlearn: 1.2304099\ttotal: 22.4s\tremaining: 3m 42s\n",
            "137:\tlearn: 1.2302637\ttotal: 22.5s\tremaining: 3m 42s\n",
            "138:\tlearn: 1.2301409\ttotal: 22.7s\tremaining: 3m 42s\n",
            "139:\tlearn: 1.2299163\ttotal: 22.8s\tremaining: 3m 41s\n",
            "140:\tlearn: 1.2298032\ttotal: 22.9s\tremaining: 3m 41s\n",
            "141:\tlearn: 1.2296910\ttotal: 23.1s\tremaining: 3m 40s\n",
            "142:\tlearn: 1.2295690\ttotal: 23.2s\tremaining: 3m 40s\n",
            "143:\tlearn: 1.2294178\ttotal: 23.3s\tremaining: 3m 39s\n",
            "144:\tlearn: 1.2292744\ttotal: 23.5s\tremaining: 3m 39s\n",
            "145:\tlearn: 1.2291275\ttotal: 23.6s\tremaining: 3m 39s\n",
            "146:\tlearn: 1.2290311\ttotal: 23.7s\tremaining: 3m 38s\n",
            "147:\tlearn: 1.2288932\ttotal: 23.9s\tremaining: 3m 38s\n",
            "148:\tlearn: 1.2287918\ttotal: 24s\tremaining: 3m 37s\n",
            "149:\tlearn: 1.2286111\ttotal: 24.2s\tremaining: 3m 37s\n",
            "150:\tlearn: 1.2285268\ttotal: 24.3s\tremaining: 3m 36s\n",
            "151:\tlearn: 1.2283964\ttotal: 24.4s\tremaining: 3m 36s\n",
            "152:\tlearn: 1.2282493\ttotal: 24.6s\tremaining: 3m 36s\n",
            "153:\tlearn: 1.2281310\ttotal: 24.7s\tremaining: 3m 35s\n",
            "154:\tlearn: 1.2279861\ttotal: 24.8s\tremaining: 3m 35s\n",
            "155:\tlearn: 1.2278427\ttotal: 25s\tremaining: 3m 35s\n",
            "156:\tlearn: 1.2277576\ttotal: 25.1s\tremaining: 3m 34s\n",
            "157:\tlearn: 1.2275722\ttotal: 25.3s\tremaining: 3m 34s\n",
            "158:\tlearn: 1.2274099\ttotal: 25.5s\tremaining: 3m 34s\n",
            "159:\tlearn: 1.2272045\ttotal: 25.8s\tremaining: 3m 35s\n",
            "160:\tlearn: 1.2270920\ttotal: 26s\tremaining: 3m 36s\n",
            "161:\tlearn: 1.2270066\ttotal: 26.2s\tremaining: 3m 36s\n",
            "162:\tlearn: 1.2268851\ttotal: 26.5s\tremaining: 3m 37s\n",
            "163:\tlearn: 1.2267340\ttotal: 26.8s\tremaining: 3m 38s\n",
            "164:\tlearn: 1.2265743\ttotal: 26.9s\tremaining: 3m 37s\n",
            "165:\tlearn: 1.2264744\ttotal: 27.1s\tremaining: 3m 37s\n",
            "166:\tlearn: 1.2263275\ttotal: 27.2s\tremaining: 3m 37s\n",
            "167:\tlearn: 1.2262290\ttotal: 27.4s\tremaining: 3m 36s\n",
            "168:\tlearn: 1.2261155\ttotal: 27.5s\tremaining: 3m 36s\n",
            "169:\tlearn: 1.2259697\ttotal: 27.7s\tremaining: 3m 37s\n",
            "170:\tlearn: 1.2258257\ttotal: 28s\tremaining: 3m 37s\n",
            "171:\tlearn: 1.2256901\ttotal: 28.3s\tremaining: 3m 38s\n",
            "172:\tlearn: 1.2255836\ttotal: 28.5s\tremaining: 3m 38s\n",
            "173:\tlearn: 1.2254513\ttotal: 28.8s\tremaining: 3m 39s\n",
            "174:\tlearn: 1.2253512\ttotal: 29.1s\tremaining: 3m 40s\n",
            "175:\tlearn: 1.2252271\ttotal: 29.2s\tremaining: 3m 39s\n",
            "176:\tlearn: 1.2250957\ttotal: 29.3s\tremaining: 3m 39s\n",
            "177:\tlearn: 1.2249959\ttotal: 29.5s\tremaining: 3m 38s\n",
            "178:\tlearn: 1.2249267\ttotal: 29.6s\tremaining: 3m 38s\n",
            "179:\tlearn: 1.2248594\ttotal: 29.7s\tremaining: 3m 37s\n",
            "180:\tlearn: 1.2247916\ttotal: 29.9s\tremaining: 3m 37s\n",
            "181:\tlearn: 1.2246638\ttotal: 30s\tremaining: 3m 37s\n",
            "182:\tlearn: 1.2245477\ttotal: 30.2s\tremaining: 3m 37s\n",
            "183:\tlearn: 1.2244685\ttotal: 30.3s\tremaining: 3m 36s\n",
            "184:\tlearn: 1.2243487\ttotal: 30.4s\tremaining: 3m 36s\n",
            "185:\tlearn: 1.2242560\ttotal: 30.6s\tremaining: 3m 35s\n",
            "186:\tlearn: 1.2241172\ttotal: 30.7s\tremaining: 3m 35s\n",
            "187:\tlearn: 1.2240465\ttotal: 30.9s\tremaining: 3m 35s\n",
            "188:\tlearn: 1.2239335\ttotal: 31s\tremaining: 3m 35s\n",
            "189:\tlearn: 1.2238233\ttotal: 31.1s\tremaining: 3m 34s\n",
            "190:\tlearn: 1.2237350\ttotal: 31.3s\tremaining: 3m 34s\n",
            "191:\tlearn: 1.2235935\ttotal: 31.4s\tremaining: 3m 34s\n",
            "192:\tlearn: 1.2235313\ttotal: 31.6s\tremaining: 3m 33s\n",
            "193:\tlearn: 1.2234717\ttotal: 31.7s\tremaining: 3m 33s\n",
            "194:\tlearn: 1.2233734\ttotal: 31.8s\tremaining: 3m 33s\n",
            "195:\tlearn: 1.2232978\ttotal: 32s\tremaining: 3m 32s\n",
            "196:\tlearn: 1.2231880\ttotal: 32.1s\tremaining: 3m 32s\n",
            "197:\tlearn: 1.2231092\ttotal: 32.3s\tremaining: 3m 32s\n",
            "198:\tlearn: 1.2230128\ttotal: 32.4s\tremaining: 3m 31s\n",
            "199:\tlearn: 1.2229215\ttotal: 32.5s\tremaining: 3m 31s\n",
            "200:\tlearn: 1.2228287\ttotal: 32.7s\tremaining: 3m 31s\n",
            "201:\tlearn: 1.2227378\ttotal: 32.8s\tremaining: 3m 30s\n",
            "202:\tlearn: 1.2226711\ttotal: 32.9s\tremaining: 3m 30s\n",
            "203:\tlearn: 1.2225279\ttotal: 33.1s\tremaining: 3m 30s\n",
            "204:\tlearn: 1.2224256\ttotal: 33.2s\tremaining: 3m 29s\n",
            "205:\tlearn: 1.2223512\ttotal: 33.3s\tremaining: 3m 29s\n",
            "206:\tlearn: 1.2222918\ttotal: 33.5s\tremaining: 3m 29s\n",
            "207:\tlearn: 1.2222347\ttotal: 33.6s\tremaining: 3m 28s\n",
            "208:\tlearn: 1.2221699\ttotal: 33.7s\tremaining: 3m 28s\n",
            "209:\tlearn: 1.2220905\ttotal: 33.9s\tremaining: 3m 28s\n",
            "210:\tlearn: 1.2220078\ttotal: 34s\tremaining: 3m 27s\n",
            "211:\tlearn: 1.2218990\ttotal: 34.2s\tremaining: 3m 27s\n",
            "212:\tlearn: 1.2218283\ttotal: 34.3s\tremaining: 3m 27s\n",
            "213:\tlearn: 1.2217689\ttotal: 34.4s\tremaining: 3m 26s\n",
            "214:\tlearn: 1.2216738\ttotal: 34.6s\tremaining: 3m 26s\n",
            "215:\tlearn: 1.2216071\ttotal: 34.7s\tremaining: 3m 26s\n",
            "216:\tlearn: 1.2215547\ttotal: 34.9s\tremaining: 3m 26s\n",
            "217:\tlearn: 1.2214810\ttotal: 35s\tremaining: 3m 25s\n",
            "218:\tlearn: 1.2213926\ttotal: 35.1s\tremaining: 3m 25s\n",
            "219:\tlearn: 1.2213046\ttotal: 35.3s\tremaining: 3m 25s\n",
            "220:\tlearn: 1.2212537\ttotal: 35.4s\tremaining: 3m 24s\n",
            "221:\tlearn: 1.2211687\ttotal: 35.6s\tremaining: 3m 24s\n",
            "222:\tlearn: 1.2210760\ttotal: 35.7s\tremaining: 3m 24s\n",
            "223:\tlearn: 1.2209994\ttotal: 35.8s\tremaining: 3m 24s\n",
            "224:\tlearn: 1.2209087\ttotal: 36s\tremaining: 3m 23s\n",
            "225:\tlearn: 1.2208357\ttotal: 36.1s\tremaining: 3m 23s\n",
            "226:\tlearn: 1.2207698\ttotal: 36.3s\tremaining: 3m 23s\n",
            "227:\tlearn: 1.2206848\ttotal: 36.4s\tremaining: 3m 23s\n",
            "228:\tlearn: 1.2206108\ttotal: 36.5s\tremaining: 3m 22s\n",
            "229:\tlearn: 1.2205326\ttotal: 36.7s\tremaining: 3m 22s\n",
            "230:\tlearn: 1.2204397\ttotal: 36.8s\tremaining: 3m 22s\n",
            "231:\tlearn: 1.2203725\ttotal: 37.1s\tremaining: 3m 22s\n",
            "232:\tlearn: 1.2202756\ttotal: 37.4s\tremaining: 3m 23s\n",
            "233:\tlearn: 1.2202000\ttotal: 37.7s\tremaining: 3m 23s\n",
            "234:\tlearn: 1.2201408\ttotal: 37.9s\tremaining: 3m 24s\n",
            "235:\tlearn: 1.2200826\ttotal: 38.2s\tremaining: 3m 24s\n",
            "236:\tlearn: 1.2200392\ttotal: 38.3s\tremaining: 3m 24s\n",
            "237:\tlearn: 1.2199932\ttotal: 38.5s\tremaining: 3m 23s\n",
            "238:\tlearn: 1.2198982\ttotal: 38.6s\tremaining: 3m 23s\n",
            "239:\tlearn: 1.2198300\ttotal: 38.7s\tremaining: 3m 23s\n",
            "240:\tlearn: 1.2197485\ttotal: 38.9s\tremaining: 3m 23s\n",
            "241:\tlearn: 1.2196632\ttotal: 39s\tremaining: 3m 22s\n",
            "242:\tlearn: 1.2195941\ttotal: 39.1s\tremaining: 3m 22s\n",
            "243:\tlearn: 1.2195289\ttotal: 39.3s\tremaining: 3m 22s\n",
            "244:\tlearn: 1.2194665\ttotal: 39.4s\tremaining: 3m 21s\n",
            "245:\tlearn: 1.2194199\ttotal: 39.6s\tremaining: 3m 21s\n",
            "246:\tlearn: 1.2193554\ttotal: 39.7s\tremaining: 3m 21s\n",
            "247:\tlearn: 1.2192782\ttotal: 39.8s\tremaining: 3m 21s\n",
            "248:\tlearn: 1.2192235\ttotal: 40s\tremaining: 3m 20s\n",
            "249:\tlearn: 1.2191633\ttotal: 40.1s\tremaining: 3m 20s\n",
            "250:\tlearn: 1.2191041\ttotal: 40.3s\tremaining: 3m 20s\n",
            "251:\tlearn: 1.2190395\ttotal: 40.4s\tremaining: 3m 20s\n",
            "252:\tlearn: 1.2189845\ttotal: 40.5s\tremaining: 3m 19s\n",
            "253:\tlearn: 1.2189157\ttotal: 40.7s\tremaining: 3m 19s\n",
            "254:\tlearn: 1.2188416\ttotal: 40.8s\tremaining: 3m 19s\n",
            "255:\tlearn: 1.2187654\ttotal: 41s\tremaining: 3m 19s\n",
            "256:\tlearn: 1.2186865\ttotal: 41.1s\tremaining: 3m 18s\n",
            "257:\tlearn: 1.2186235\ttotal: 41.3s\tremaining: 3m 18s\n",
            "258:\tlearn: 1.2185757\ttotal: 41.4s\tremaining: 3m 18s\n",
            "259:\tlearn: 1.2184876\ttotal: 41.5s\tremaining: 3m 18s\n",
            "260:\tlearn: 1.2184356\ttotal: 41.7s\tremaining: 3m 17s\n",
            "261:\tlearn: 1.2184008\ttotal: 41.8s\tremaining: 3m 17s\n",
            "262:\tlearn: 1.2183484\ttotal: 41.9s\tremaining: 3m 17s\n",
            "263:\tlearn: 1.2182978\ttotal: 42.1s\tremaining: 3m 16s\n",
            "264:\tlearn: 1.2182336\ttotal: 42.2s\tremaining: 3m 16s\n",
            "265:\tlearn: 1.2181723\ttotal: 42.3s\tremaining: 3m 16s\n",
            "266:\tlearn: 1.2181046\ttotal: 42.5s\tremaining: 3m 16s\n",
            "267:\tlearn: 1.2180435\ttotal: 42.6s\tremaining: 3m 15s\n",
            "268:\tlearn: 1.2179862\ttotal: 42.7s\tremaining: 3m 15s\n",
            "269:\tlearn: 1.2179302\ttotal: 42.9s\tremaining: 3m 15s\n",
            "270:\tlearn: 1.2178832\ttotal: 43s\tremaining: 3m 14s\n",
            "271:\tlearn: 1.2177998\ttotal: 43.1s\tremaining: 3m 14s\n",
            "272:\tlearn: 1.2177376\ttotal: 43.3s\tremaining: 3m 14s\n",
            "273:\tlearn: 1.2176916\ttotal: 43.4s\tremaining: 3m 14s\n",
            "274:\tlearn: 1.2176186\ttotal: 43.6s\tremaining: 3m 14s\n",
            "275:\tlearn: 1.2175782\ttotal: 43.7s\tremaining: 3m 13s\n",
            "276:\tlearn: 1.2174711\ttotal: 43.8s\tremaining: 3m 13s\n",
            "277:\tlearn: 1.2174292\ttotal: 44s\tremaining: 3m 13s\n",
            "278:\tlearn: 1.2173798\ttotal: 44.1s\tremaining: 3m 12s\n",
            "279:\tlearn: 1.2173345\ttotal: 44.2s\tremaining: 3m 12s\n",
            "280:\tlearn: 1.2172799\ttotal: 44.4s\tremaining: 3m 12s\n",
            "281:\tlearn: 1.2172261\ttotal: 44.5s\tremaining: 3m 12s\n",
            "282:\tlearn: 1.2172037\ttotal: 44.7s\tremaining: 3m 12s\n",
            "283:\tlearn: 1.2171577\ttotal: 44.8s\tremaining: 3m 11s\n",
            "284:\tlearn: 1.2170739\ttotal: 44.9s\tremaining: 3m 11s\n",
            "285:\tlearn: 1.2170017\ttotal: 45.1s\tremaining: 3m 11s\n",
            "286:\tlearn: 1.2169532\ttotal: 45.2s\tremaining: 3m 11s\n",
            "287:\tlearn: 1.2169120\ttotal: 45.4s\tremaining: 3m 10s\n",
            "288:\tlearn: 1.2168844\ttotal: 45.5s\tremaining: 3m 10s\n",
            "289:\tlearn: 1.2168123\ttotal: 45.6s\tremaining: 3m 10s\n",
            "290:\tlearn: 1.2167639\ttotal: 45.8s\tremaining: 3m 10s\n",
            "291:\tlearn: 1.2166809\ttotal: 45.9s\tremaining: 3m 9s\n",
            "292:\tlearn: 1.2166060\ttotal: 46s\tremaining: 3m 9s\n",
            "293:\tlearn: 1.2165405\ttotal: 46.2s\tremaining: 3m 9s\n",
            "294:\tlearn: 1.2164820\ttotal: 46.3s\tremaining: 3m 9s\n",
            "295:\tlearn: 1.2164441\ttotal: 46.5s\tremaining: 3m 9s\n",
            "296:\tlearn: 1.2163580\ttotal: 46.6s\tremaining: 3m 8s\n",
            "297:\tlearn: 1.2162702\ttotal: 46.8s\tremaining: 3m 8s\n",
            "298:\tlearn: 1.2162245\ttotal: 46.9s\tremaining: 3m 8s\n",
            "299:\tlearn: 1.2161410\ttotal: 47.1s\tremaining: 3m 8s\n",
            "300:\tlearn: 1.2160715\ttotal: 47.2s\tremaining: 3m 8s\n",
            "301:\tlearn: 1.2160081\ttotal: 47.4s\tremaining: 3m 7s\n",
            "302:\tlearn: 1.2159642\ttotal: 47.5s\tremaining: 3m 7s\n",
            "303:\tlearn: 1.2158993\ttotal: 47.6s\tremaining: 3m 7s\n",
            "304:\tlearn: 1.2158413\ttotal: 47.8s\tremaining: 3m 7s\n",
            "305:\tlearn: 1.2158168\ttotal: 47.9s\tremaining: 3m 6s\n",
            "306:\tlearn: 1.2157674\ttotal: 48s\tremaining: 3m 6s\n",
            "307:\tlearn: 1.2157141\ttotal: 48.2s\tremaining: 3m 6s\n",
            "308:\tlearn: 1.2156495\ttotal: 48.3s\tremaining: 3m 6s\n",
            "309:\tlearn: 1.2156060\ttotal: 48.6s\tremaining: 3m 6s\n",
            "310:\tlearn: 1.2155283\ttotal: 48.9s\tremaining: 3m 6s\n",
            "311:\tlearn: 1.2154518\ttotal: 49.2s\tremaining: 3m 7s\n",
            "312:\tlearn: 1.2154005\ttotal: 49.4s\tremaining: 3m 7s\n",
            "313:\tlearn: 1.2153526\ttotal: 49.7s\tremaining: 3m 7s\n",
            "314:\tlearn: 1.2153113\ttotal: 49.8s\tremaining: 3m 7s\n",
            "315:\tlearn: 1.2152344\ttotal: 50s\tremaining: 3m 7s\n",
            "316:\tlearn: 1.2152040\ttotal: 50.1s\tremaining: 3m 6s\n",
            "317:\tlearn: 1.2151628\ttotal: 50.2s\tremaining: 3m 6s\n",
            "318:\tlearn: 1.2151244\ttotal: 50.3s\tremaining: 3m 6s\n",
            "319:\tlearn: 1.2150849\ttotal: 50.5s\tremaining: 3m 6s\n",
            "320:\tlearn: 1.2150287\ttotal: 50.6s\tremaining: 3m 5s\n",
            "321:\tlearn: 1.2149600\ttotal: 50.8s\tremaining: 3m 5s\n",
            "322:\tlearn: 1.2149254\ttotal: 50.9s\tremaining: 3m 5s\n",
            "323:\tlearn: 1.2148515\ttotal: 51.1s\tremaining: 3m 5s\n",
            "324:\tlearn: 1.2148200\ttotal: 51.2s\tremaining: 3m 5s\n",
            "325:\tlearn: 1.2147681\ttotal: 51.3s\tremaining: 3m 4s\n",
            "326:\tlearn: 1.2147307\ttotal: 51.5s\tremaining: 3m 4s\n",
            "327:\tlearn: 1.2147033\ttotal: 51.6s\tremaining: 3m 4s\n",
            "328:\tlearn: 1.2146556\ttotal: 51.7s\tremaining: 3m 4s\n",
            "329:\tlearn: 1.2146101\ttotal: 51.9s\tremaining: 3m 3s\n",
            "330:\tlearn: 1.2145515\ttotal: 52s\tremaining: 3m 3s\n",
            "331:\tlearn: 1.2145220\ttotal: 52.1s\tremaining: 3m 3s\n",
            "332:\tlearn: 1.2144708\ttotal: 52.3s\tremaining: 3m 3s\n",
            "333:\tlearn: 1.2144175\ttotal: 52.4s\tremaining: 3m 2s\n",
            "334:\tlearn: 1.2143911\ttotal: 52.6s\tremaining: 3m 2s\n",
            "335:\tlearn: 1.2143532\ttotal: 52.7s\tremaining: 3m 2s\n",
            "336:\tlearn: 1.2143038\ttotal: 52.8s\tremaining: 3m 2s\n",
            "337:\tlearn: 1.2142661\ttotal: 53s\tremaining: 3m 2s\n",
            "338:\tlearn: 1.2142317\ttotal: 53.1s\tremaining: 3m 1s\n",
            "339:\tlearn: 1.2141709\ttotal: 53.2s\tremaining: 3m 1s\n",
            "340:\tlearn: 1.2141299\ttotal: 53.4s\tremaining: 3m 1s\n",
            "341:\tlearn: 1.2140790\ttotal: 53.5s\tremaining: 3m 1s\n",
            "342:\tlearn: 1.2140587\ttotal: 53.7s\tremaining: 3m\n",
            "343:\tlearn: 1.2139827\ttotal: 53.8s\tremaining: 3m\n",
            "344:\tlearn: 1.2139408\ttotal: 54s\tremaining: 3m\n",
            "345:\tlearn: 1.2138993\ttotal: 54.1s\tremaining: 3m\n",
            "346:\tlearn: 1.2138590\ttotal: 54.2s\tremaining: 3m\n",
            "347:\tlearn: 1.2138381\ttotal: 54.4s\tremaining: 2m 59s\n",
            "348:\tlearn: 1.2137974\ttotal: 54.5s\tremaining: 2m 59s\n",
            "349:\tlearn: 1.2137523\ttotal: 54.7s\tremaining: 2m 59s\n",
            "350:\tlearn: 1.2136930\ttotal: 54.8s\tremaining: 2m 59s\n",
            "351:\tlearn: 1.2136331\ttotal: 55s\tremaining: 2m 59s\n",
            "352:\tlearn: 1.2135937\ttotal: 55.1s\tremaining: 2m 58s\n",
            "353:\tlearn: 1.2135547\ttotal: 55.2s\tremaining: 2m 58s\n",
            "354:\tlearn: 1.2135335\ttotal: 55.4s\tremaining: 2m 58s\n",
            "355:\tlearn: 1.2134759\ttotal: 55.5s\tremaining: 2m 58s\n",
            "356:\tlearn: 1.2134248\ttotal: 55.7s\tremaining: 2m 58s\n",
            "357:\tlearn: 1.2133877\ttotal: 55.8s\tremaining: 2m 57s\n",
            "358:\tlearn: 1.2133344\ttotal: 55.9s\tremaining: 2m 57s\n",
            "359:\tlearn: 1.2133040\ttotal: 56.1s\tremaining: 2m 57s\n",
            "360:\tlearn: 1.2132728\ttotal: 56.2s\tremaining: 2m 57s\n",
            "361:\tlearn: 1.2132394\ttotal: 56.3s\tremaining: 2m 57s\n",
            "362:\tlearn: 1.2131980\ttotal: 56.5s\tremaining: 2m 56s\n",
            "363:\tlearn: 1.2131549\ttotal: 56.6s\tremaining: 2m 56s\n",
            "364:\tlearn: 1.2131111\ttotal: 56.8s\tremaining: 2m 56s\n",
            "365:\tlearn: 1.2130417\ttotal: 56.9s\tremaining: 2m 56s\n",
            "366:\tlearn: 1.2129975\ttotal: 57s\tremaining: 2m 56s\n",
            "367:\tlearn: 1.2129476\ttotal: 57.2s\tremaining: 2m 55s\n",
            "368:\tlearn: 1.2129075\ttotal: 57.3s\tremaining: 2m 55s\n",
            "369:\tlearn: 1.2128353\ttotal: 57.5s\tremaining: 2m 55s\n",
            "370:\tlearn: 1.2127968\ttotal: 57.6s\tremaining: 2m 55s\n",
            "371:\tlearn: 1.2127157\ttotal: 57.8s\tremaining: 2m 55s\n",
            "372:\tlearn: 1.2126969\ttotal: 57.9s\tremaining: 2m 54s\n",
            "373:\tlearn: 1.2126535\ttotal: 58s\tremaining: 2m 54s\n",
            "374:\tlearn: 1.2126057\ttotal: 58.2s\tremaining: 2m 54s\n",
            "375:\tlearn: 1.2125581\ttotal: 58.3s\tremaining: 2m 54s\n",
            "376:\tlearn: 1.2125201\ttotal: 58.4s\tremaining: 2m 54s\n",
            "377:\tlearn: 1.2124968\ttotal: 58.6s\tremaining: 2m 53s\n",
            "378:\tlearn: 1.2124199\ttotal: 58.7s\tremaining: 2m 53s\n",
            "379:\tlearn: 1.2123690\ttotal: 58.9s\tremaining: 2m 53s\n",
            "380:\tlearn: 1.2123232\ttotal: 59s\tremaining: 2m 53s\n",
            "381:\tlearn: 1.2122974\ttotal: 59.1s\tremaining: 2m 53s\n",
            "382:\tlearn: 1.2122448\ttotal: 59.3s\tremaining: 2m 52s\n",
            "383:\tlearn: 1.2122111\ttotal: 59.4s\tremaining: 2m 52s\n",
            "384:\tlearn: 1.2121712\ttotal: 59.5s\tremaining: 2m 52s\n",
            "385:\tlearn: 1.2121211\ttotal: 59.7s\tremaining: 2m 52s\n",
            "386:\tlearn: 1.2120910\ttotal: 59.9s\tremaining: 2m 52s\n",
            "387:\tlearn: 1.2120657\ttotal: 1m\tremaining: 2m 52s\n",
            "388:\tlearn: 1.2120409\ttotal: 1m\tremaining: 2m 52s\n",
            "389:\tlearn: 1.2119966\ttotal: 1m\tremaining: 2m 52s\n",
            "390:\tlearn: 1.2119692\ttotal: 1m\tremaining: 2m 52s\n",
            "391:\tlearn: 1.2119325\ttotal: 1m 1s\tremaining: 2m 52s\n",
            "392:\tlearn: 1.2118989\ttotal: 1m 1s\tremaining: 2m 52s\n",
            "393:\tlearn: 1.2118788\ttotal: 1m 1s\tremaining: 2m 52s\n",
            "394:\tlearn: 1.2118215\ttotal: 1m 1s\tremaining: 2m 52s\n",
            "395:\tlearn: 1.2117791\ttotal: 1m 1s\tremaining: 2m 51s\n",
            "396:\tlearn: 1.2117321\ttotal: 1m 1s\tremaining: 2m 51s\n",
            "397:\tlearn: 1.2116853\ttotal: 1m 1s\tremaining: 2m 51s\n",
            "398:\tlearn: 1.2116624\ttotal: 1m 2s\tremaining: 2m 51s\n",
            "399:\tlearn: 1.2116031\ttotal: 1m 2s\tremaining: 2m 51s\n",
            "400:\tlearn: 1.2115456\ttotal: 1m 2s\tremaining: 2m 51s\n",
            "401:\tlearn: 1.2114855\ttotal: 1m 2s\tremaining: 2m 50s\n",
            "402:\tlearn: 1.2114452\ttotal: 1m 2s\tremaining: 2m 50s\n",
            "403:\tlearn: 1.2114092\ttotal: 1m 2s\tremaining: 2m 50s\n",
            "404:\tlearn: 1.2113654\ttotal: 1m 3s\tremaining: 2m 50s\n",
            "405:\tlearn: 1.2113477\ttotal: 1m 3s\tremaining: 2m 50s\n",
            "406:\tlearn: 1.2113073\ttotal: 1m 3s\tremaining: 2m 49s\n",
            "407:\tlearn: 1.2112590\ttotal: 1m 3s\tremaining: 2m 49s\n",
            "408:\tlearn: 1.2112148\ttotal: 1m 3s\tremaining: 2m 49s\n",
            "409:\tlearn: 1.2111859\ttotal: 1m 3s\tremaining: 2m 49s\n",
            "410:\tlearn: 1.2111296\ttotal: 1m 3s\tremaining: 2m 49s\n",
            "411:\tlearn: 1.2110776\ttotal: 1m 3s\tremaining: 2m 48s\n",
            "412:\tlearn: 1.2110401\ttotal: 1m 4s\tremaining: 2m 48s\n",
            "413:\tlearn: 1.2110115\ttotal: 1m 4s\tremaining: 2m 48s\n",
            "414:\tlearn: 1.2109797\ttotal: 1m 4s\tremaining: 2m 48s\n",
            "415:\tlearn: 1.2109428\ttotal: 1m 4s\tremaining: 2m 48s\n",
            "416:\tlearn: 1.2109077\ttotal: 1m 4s\tremaining: 2m 47s\n",
            "417:\tlearn: 1.2108936\ttotal: 1m 4s\tremaining: 2m 47s\n",
            "418:\tlearn: 1.2108567\ttotal: 1m 4s\tremaining: 2m 47s\n",
            "419:\tlearn: 1.2108150\ttotal: 1m 5s\tremaining: 2m 47s\n",
            "420:\tlearn: 1.2107778\ttotal: 1m 5s\tremaining: 2m 47s\n",
            "421:\tlearn: 1.2107106\ttotal: 1m 5s\tremaining: 2m 46s\n",
            "422:\tlearn: 1.2106594\ttotal: 1m 5s\tremaining: 2m 46s\n",
            "423:\tlearn: 1.2106135\ttotal: 1m 5s\tremaining: 2m 46s\n",
            "424:\tlearn: 1.2105906\ttotal: 1m 5s\tremaining: 2m 46s\n",
            "425:\tlearn: 1.2105422\ttotal: 1m 5s\tremaining: 2m 46s\n",
            "426:\tlearn: 1.2105031\ttotal: 1m 6s\tremaining: 2m 46s\n",
            "427:\tlearn: 1.2104835\ttotal: 1m 6s\tremaining: 2m 45s\n",
            "428:\tlearn: 1.2104565\ttotal: 1m 6s\tremaining: 2m 45s\n",
            "429:\tlearn: 1.2104238\ttotal: 1m 6s\tremaining: 2m 45s\n",
            "430:\tlearn: 1.2103552\ttotal: 1m 6s\tremaining: 2m 45s\n",
            "431:\tlearn: 1.2102996\ttotal: 1m 6s\tremaining: 2m 45s\n",
            "432:\tlearn: 1.2102489\ttotal: 1m 6s\tremaining: 2m 44s\n",
            "433:\tlearn: 1.2102080\ttotal: 1m 7s\tremaining: 2m 44s\n",
            "434:\tlearn: 1.2101789\ttotal: 1m 7s\tremaining: 2m 44s\n",
            "435:\tlearn: 1.2101652\ttotal: 1m 7s\tremaining: 2m 44s\n",
            "436:\tlearn: 1.2101275\ttotal: 1m 7s\tremaining: 2m 44s\n",
            "437:\tlearn: 1.2100731\ttotal: 1m 7s\tremaining: 2m 43s\n",
            "438:\tlearn: 1.2100517\ttotal: 1m 7s\tremaining: 2m 43s\n",
            "439:\tlearn: 1.2100120\ttotal: 1m 7s\tremaining: 2m 43s\n",
            "440:\tlearn: 1.2099691\ttotal: 1m 8s\tremaining: 2m 43s\n",
            "441:\tlearn: 1.2099332\ttotal: 1m 8s\tremaining: 2m 43s\n",
            "442:\tlearn: 1.2099115\ttotal: 1m 8s\tremaining: 2m 42s\n",
            "443:\tlearn: 1.2098510\ttotal: 1m 8s\tremaining: 2m 42s\n",
            "444:\tlearn: 1.2098087\ttotal: 1m 8s\tremaining: 2m 42s\n",
            "445:\tlearn: 1.2097636\ttotal: 1m 8s\tremaining: 2m 42s\n",
            "446:\tlearn: 1.2097247\ttotal: 1m 8s\tremaining: 2m 42s\n",
            "447:\tlearn: 1.2096941\ttotal: 1m 9s\tremaining: 2m 42s\n",
            "448:\tlearn: 1.2096564\ttotal: 1m 9s\tremaining: 2m 41s\n",
            "449:\tlearn: 1.2096358\ttotal: 1m 9s\tremaining: 2m 41s\n",
            "450:\tlearn: 1.2096083\ttotal: 1m 9s\tremaining: 2m 41s\n",
            "451:\tlearn: 1.2095549\ttotal: 1m 9s\tremaining: 2m 41s\n",
            "452:\tlearn: 1.2095166\ttotal: 1m 9s\tremaining: 2m 41s\n",
            "453:\tlearn: 1.2094900\ttotal: 1m 9s\tremaining: 2m 40s\n",
            "454:\tlearn: 1.2094699\ttotal: 1m 9s\tremaining: 2m 40s\n",
            "455:\tlearn: 1.2094328\ttotal: 1m 10s\tremaining: 2m 40s\n",
            "456:\tlearn: 1.2093910\ttotal: 1m 10s\tremaining: 2m 40s\n",
            "457:\tlearn: 1.2093660\ttotal: 1m 10s\tremaining: 2m 40s\n",
            "458:\tlearn: 1.2093313\ttotal: 1m 10s\tremaining: 2m 39s\n",
            "459:\tlearn: 1.2093052\ttotal: 1m 10s\tremaining: 2m 39s\n",
            "460:\tlearn: 1.2092680\ttotal: 1m 10s\tremaining: 2m 39s\n",
            "461:\tlearn: 1.2092449\ttotal: 1m 10s\tremaining: 2m 39s\n",
            "462:\tlearn: 1.2092046\ttotal: 1m 11s\tremaining: 2m 39s\n",
            "463:\tlearn: 1.2091673\ttotal: 1m 11s\tremaining: 2m 39s\n",
            "464:\tlearn: 1.2091306\ttotal: 1m 11s\tremaining: 2m 39s\n",
            "465:\tlearn: 1.2090726\ttotal: 1m 11s\tremaining: 2m 39s\n",
            "466:\tlearn: 1.2090326\ttotal: 1m 12s\tremaining: 2m 39s\n",
            "467:\tlearn: 1.2090083\ttotal: 1m 12s\tremaining: 2m 39s\n",
            "468:\tlearn: 1.2089659\ttotal: 1m 12s\tremaining: 2m 39s\n",
            "469:\tlearn: 1.2089418\ttotal: 1m 12s\tremaining: 2m 39s\n",
            "470:\tlearn: 1.2089093\ttotal: 1m 12s\tremaining: 2m 39s\n",
            "471:\tlearn: 1.2088878\ttotal: 1m 13s\tremaining: 2m 39s\n",
            "472:\tlearn: 1.2088525\ttotal: 1m 13s\tremaining: 2m 38s\n",
            "473:\tlearn: 1.2088185\ttotal: 1m 13s\tremaining: 2m 38s\n",
            "474:\tlearn: 1.2087746\ttotal: 1m 13s\tremaining: 2m 38s\n",
            "475:\tlearn: 1.2087462\ttotal: 1m 13s\tremaining: 2m 38s\n",
            "476:\tlearn: 1.2087009\ttotal: 1m 13s\tremaining: 2m 38s\n",
            "477:\tlearn: 1.2086830\ttotal: 1m 13s\tremaining: 2m 38s\n",
            "478:\tlearn: 1.2086720\ttotal: 1m 14s\tremaining: 2m 37s\n",
            "479:\tlearn: 1.2086444\ttotal: 1m 14s\tremaining: 2m 37s\n",
            "480:\tlearn: 1.2086116\ttotal: 1m 14s\tremaining: 2m 37s\n",
            "481:\tlearn: 1.2085893\ttotal: 1m 14s\tremaining: 2m 37s\n",
            "482:\tlearn: 1.2085534\ttotal: 1m 14s\tremaining: 2m 37s\n",
            "483:\tlearn: 1.2085008\ttotal: 1m 14s\tremaining: 2m 36s\n",
            "484:\tlearn: 1.2084717\ttotal: 1m 14s\tremaining: 2m 36s\n",
            "485:\tlearn: 1.2084303\ttotal: 1m 15s\tremaining: 2m 36s\n",
            "486:\tlearn: 1.2084211\ttotal: 1m 15s\tremaining: 2m 36s\n",
            "487:\tlearn: 1.2083619\ttotal: 1m 15s\tremaining: 2m 36s\n",
            "488:\tlearn: 1.2083318\ttotal: 1m 15s\tremaining: 2m 36s\n",
            "489:\tlearn: 1.2083136\ttotal: 1m 15s\tremaining: 2m 35s\n",
            "490:\tlearn: 1.2082920\ttotal: 1m 15s\tremaining: 2m 35s\n",
            "491:\tlearn: 1.2082550\ttotal: 1m 15s\tremaining: 2m 35s\n",
            "492:\tlearn: 1.2082090\ttotal: 1m 16s\tremaining: 2m 35s\n",
            "493:\tlearn: 1.2081645\ttotal: 1m 16s\tremaining: 2m 35s\n",
            "494:\tlearn: 1.2081385\ttotal: 1m 16s\tremaining: 2m 34s\n",
            "495:\tlearn: 1.2081219\ttotal: 1m 16s\tremaining: 2m 34s\n",
            "496:\tlearn: 1.2080697\ttotal: 1m 16s\tremaining: 2m 34s\n",
            "497:\tlearn: 1.2080429\ttotal: 1m 16s\tremaining: 2m 34s\n",
            "498:\tlearn: 1.2080285\ttotal: 1m 16s\tremaining: 2m 34s\n",
            "499:\tlearn: 1.2080018\ttotal: 1m 16s\tremaining: 2m 33s\n",
            "500:\tlearn: 1.2079725\ttotal: 1m 17s\tremaining: 2m 33s\n",
            "501:\tlearn: 1.2079272\ttotal: 1m 17s\tremaining: 2m 33s\n",
            "502:\tlearn: 1.2078940\ttotal: 1m 17s\tremaining: 2m 33s\n",
            "503:\tlearn: 1.2078617\ttotal: 1m 17s\tremaining: 2m 33s\n",
            "504:\tlearn: 1.2078035\ttotal: 1m 17s\tremaining: 2m 33s\n",
            "505:\tlearn: 1.2077687\ttotal: 1m 17s\tremaining: 2m 32s\n",
            "506:\tlearn: 1.2077272\ttotal: 1m 17s\tremaining: 2m 32s\n",
            "507:\tlearn: 1.2077161\ttotal: 1m 18s\tremaining: 2m 32s\n",
            "508:\tlearn: 1.2076962\ttotal: 1m 18s\tremaining: 2m 32s\n",
            "509:\tlearn: 1.2076723\ttotal: 1m 18s\tremaining: 2m 32s\n",
            "510:\tlearn: 1.2076509\ttotal: 1m 18s\tremaining: 2m 31s\n",
            "511:\tlearn: 1.2076294\ttotal: 1m 18s\tremaining: 2m 31s\n",
            "512:\tlearn: 1.2075950\ttotal: 1m 18s\tremaining: 2m 31s\n",
            "513:\tlearn: 1.2075615\ttotal: 1m 18s\tremaining: 2m 31s\n",
            "514:\tlearn: 1.2075311\ttotal: 1m 19s\tremaining: 2m 31s\n",
            "515:\tlearn: 1.2074828\ttotal: 1m 19s\tremaining: 2m 31s\n",
            "516:\tlearn: 1.2074548\ttotal: 1m 19s\tremaining: 2m 30s\n",
            "517:\tlearn: 1.2074082\ttotal: 1m 19s\tremaining: 2m 30s\n",
            "518:\tlearn: 1.2073777\ttotal: 1m 19s\tremaining: 2m 30s\n",
            "519:\tlearn: 1.2073611\ttotal: 1m 19s\tremaining: 2m 30s\n",
            "520:\tlearn: 1.2073442\ttotal: 1m 19s\tremaining: 2m 30s\n",
            "521:\tlearn: 1.2072971\ttotal: 1m 20s\tremaining: 2m 30s\n",
            "522:\tlearn: 1.2072506\ttotal: 1m 20s\tremaining: 2m 29s\n",
            "523:\tlearn: 1.2072063\ttotal: 1m 20s\tremaining: 2m 29s\n",
            "524:\tlearn: 1.2071829\ttotal: 1m 20s\tremaining: 2m 29s\n",
            "525:\tlearn: 1.2071533\ttotal: 1m 20s\tremaining: 2m 29s\n",
            "526:\tlearn: 1.2071236\ttotal: 1m 20s\tremaining: 2m 29s\n",
            "527:\tlearn: 1.2070958\ttotal: 1m 20s\tremaining: 2m 28s\n",
            "528:\tlearn: 1.2070644\ttotal: 1m 21s\tremaining: 2m 28s\n",
            "529:\tlearn: 1.2070293\ttotal: 1m 21s\tremaining: 2m 28s\n",
            "530:\tlearn: 1.2070073\ttotal: 1m 21s\tremaining: 2m 28s\n",
            "531:\tlearn: 1.2069900\ttotal: 1m 21s\tremaining: 2m 28s\n",
            "532:\tlearn: 1.2069702\ttotal: 1m 21s\tremaining: 2m 28s\n",
            "533:\tlearn: 1.2069362\ttotal: 1m 21s\tremaining: 2m 27s\n",
            "534:\tlearn: 1.2069008\ttotal: 1m 21s\tremaining: 2m 27s\n",
            "535:\tlearn: 1.2068725\ttotal: 1m 22s\tremaining: 2m 27s\n",
            "536:\tlearn: 1.2068344\ttotal: 1m 22s\tremaining: 2m 27s\n",
            "537:\tlearn: 1.2068141\ttotal: 1m 22s\tremaining: 2m 27s\n",
            "538:\tlearn: 1.2067840\ttotal: 1m 22s\tremaining: 2m 27s\n",
            "539:\tlearn: 1.2067672\ttotal: 1m 22s\tremaining: 2m 26s\n",
            "540:\tlearn: 1.2067413\ttotal: 1m 22s\tremaining: 2m 27s\n",
            "541:\tlearn: 1.2066876\ttotal: 1m 23s\tremaining: 2m 27s\n",
            "542:\tlearn: 1.2066586\ttotal: 1m 23s\tremaining: 2m 27s\n",
            "543:\tlearn: 1.2066163\ttotal: 1m 23s\tremaining: 2m 27s\n",
            "544:\tlearn: 1.2065866\ttotal: 1m 24s\tremaining: 2m 27s\n",
            "545:\tlearn: 1.2065514\ttotal: 1m 24s\tremaining: 2m 27s\n",
            "546:\tlearn: 1.2065192\ttotal: 1m 24s\tremaining: 2m 26s\n",
            "547:\tlearn: 1.2064916\ttotal: 1m 24s\tremaining: 2m 26s\n",
            "548:\tlearn: 1.2064477\ttotal: 1m 24s\tremaining: 2m 26s\n",
            "549:\tlearn: 1.2064198\ttotal: 1m 24s\tremaining: 2m 26s\n",
            "550:\tlearn: 1.2064045\ttotal: 1m 24s\tremaining: 2m 26s\n",
            "551:\tlearn: 1.2063843\ttotal: 1m 25s\tremaining: 2m 26s\n",
            "552:\tlearn: 1.2063511\ttotal: 1m 25s\tremaining: 2m 25s\n",
            "553:\tlearn: 1.2063288\ttotal: 1m 25s\tremaining: 2m 25s\n",
            "554:\tlearn: 1.2063065\ttotal: 1m 25s\tremaining: 2m 25s\n",
            "555:\tlearn: 1.2062813\ttotal: 1m 25s\tremaining: 2m 25s\n",
            "556:\tlearn: 1.2062483\ttotal: 1m 25s\tremaining: 2m 25s\n",
            "557:\tlearn: 1.2062314\ttotal: 1m 25s\tremaining: 2m 25s\n",
            "558:\tlearn: 1.2061910\ttotal: 1m 26s\tremaining: 2m 24s\n",
            "559:\tlearn: 1.2061647\ttotal: 1m 26s\tremaining: 2m 24s\n",
            "560:\tlearn: 1.2061146\ttotal: 1m 26s\tremaining: 2m 24s\n",
            "561:\tlearn: 1.2060842\ttotal: 1m 26s\tremaining: 2m 24s\n",
            "562:\tlearn: 1.2060601\ttotal: 1m 26s\tremaining: 2m 24s\n",
            "563:\tlearn: 1.2060216\ttotal: 1m 26s\tremaining: 2m 24s\n",
            "564:\tlearn: 1.2060046\ttotal: 1m 26s\tremaining: 2m 23s\n",
            "565:\tlearn: 1.2059765\ttotal: 1m 27s\tremaining: 2m 23s\n",
            "566:\tlearn: 1.2059345\ttotal: 1m 27s\tremaining: 2m 23s\n",
            "567:\tlearn: 1.2058901\ttotal: 1m 27s\tremaining: 2m 23s\n",
            "568:\tlearn: 1.2058741\ttotal: 1m 27s\tremaining: 2m 23s\n",
            "569:\tlearn: 1.2058450\ttotal: 1m 27s\tremaining: 2m 23s\n",
            "570:\tlearn: 1.2058171\ttotal: 1m 27s\tremaining: 2m 22s\n",
            "571:\tlearn: 1.2057843\ttotal: 1m 27s\tremaining: 2m 22s\n",
            "572:\tlearn: 1.2057656\ttotal: 1m 28s\tremaining: 2m 22s\n",
            "573:\tlearn: 1.2057327\ttotal: 1m 28s\tremaining: 2m 22s\n",
            "574:\tlearn: 1.2057063\ttotal: 1m 28s\tremaining: 2m 22s\n",
            "575:\tlearn: 1.2056866\ttotal: 1m 28s\tremaining: 2m 21s\n",
            "576:\tlearn: 1.2056600\ttotal: 1m 28s\tremaining: 2m 21s\n",
            "577:\tlearn: 1.2056449\ttotal: 1m 28s\tremaining: 2m 21s\n",
            "578:\tlearn: 1.2056208\ttotal: 1m 28s\tremaining: 2m 21s\n",
            "579:\tlearn: 1.2055947\ttotal: 1m 29s\tremaining: 2m 21s\n",
            "580:\tlearn: 1.2055707\ttotal: 1m 29s\tremaining: 2m 21s\n",
            "581:\tlearn: 1.2055442\ttotal: 1m 29s\tremaining: 2m 20s\n",
            "582:\tlearn: 1.2055020\ttotal: 1m 29s\tremaining: 2m 20s\n",
            "583:\tlearn: 1.2054828\ttotal: 1m 29s\tremaining: 2m 20s\n",
            "584:\tlearn: 1.2054423\ttotal: 1m 29s\tremaining: 2m 20s\n",
            "585:\tlearn: 1.2054134\ttotal: 1m 29s\tremaining: 2m 20s\n",
            "586:\tlearn: 1.2053819\ttotal: 1m 30s\tremaining: 2m 20s\n",
            "587:\tlearn: 1.2053331\ttotal: 1m 30s\tremaining: 2m 19s\n",
            "588:\tlearn: 1.2052924\ttotal: 1m 30s\tremaining: 2m 19s\n",
            "589:\tlearn: 1.2052694\ttotal: 1m 30s\tremaining: 2m 19s\n",
            "590:\tlearn: 1.2052553\ttotal: 1m 30s\tremaining: 2m 19s\n",
            "591:\tlearn: 1.2052304\ttotal: 1m 30s\tremaining: 2m 19s\n",
            "592:\tlearn: 1.2052059\ttotal: 1m 30s\tremaining: 2m 19s\n",
            "593:\tlearn: 1.2051748\ttotal: 1m 31s\tremaining: 2m 18s\n",
            "594:\tlearn: 1.2051441\ttotal: 1m 31s\tremaining: 2m 18s\n",
            "595:\tlearn: 1.2051136\ttotal: 1m 31s\tremaining: 2m 18s\n",
            "596:\tlearn: 1.2050970\ttotal: 1m 31s\tremaining: 2m 18s\n",
            "597:\tlearn: 1.2050679\ttotal: 1m 31s\tremaining: 2m 18s\n",
            "598:\tlearn: 1.2050481\ttotal: 1m 31s\tremaining: 2m 18s\n",
            "599:\tlearn: 1.2050330\ttotal: 1m 31s\tremaining: 2m 17s\n",
            "600:\tlearn: 1.2050063\ttotal: 1m 32s\tremaining: 2m 17s\n",
            "601:\tlearn: 1.2049896\ttotal: 1m 32s\tremaining: 2m 17s\n",
            "602:\tlearn: 1.2049621\ttotal: 1m 32s\tremaining: 2m 17s\n",
            "603:\tlearn: 1.2049319\ttotal: 1m 32s\tremaining: 2m 17s\n",
            "604:\tlearn: 1.2048952\ttotal: 1m 32s\tremaining: 2m 17s\n",
            "605:\tlearn: 1.2048611\ttotal: 1m 32s\tremaining: 2m 16s\n",
            "606:\tlearn: 1.2048349\ttotal: 1m 32s\tremaining: 2m 16s\n",
            "607:\tlearn: 1.2048043\ttotal: 1m 33s\tremaining: 2m 16s\n",
            "608:\tlearn: 1.2047846\ttotal: 1m 33s\tremaining: 2m 16s\n",
            "609:\tlearn: 1.2047627\ttotal: 1m 33s\tremaining: 2m 16s\n",
            "610:\tlearn: 1.2047348\ttotal: 1m 33s\tremaining: 2m 16s\n",
            "611:\tlearn: 1.2047249\ttotal: 1m 33s\tremaining: 2m 15s\n",
            "612:\tlearn: 1.2047046\ttotal: 1m 33s\tremaining: 2m 15s\n",
            "613:\tlearn: 1.2046666\ttotal: 1m 33s\tremaining: 2m 15s\n",
            "614:\tlearn: 1.2046403\ttotal: 1m 34s\tremaining: 2m 15s\n",
            "615:\tlearn: 1.2046248\ttotal: 1m 34s\tremaining: 2m 15s\n",
            "616:\tlearn: 1.2045912\ttotal: 1m 34s\tremaining: 2m 15s\n",
            "617:\tlearn: 1.2045700\ttotal: 1m 34s\tremaining: 2m 15s\n",
            "618:\tlearn: 1.2045414\ttotal: 1m 35s\tremaining: 2m 15s\n",
            "619:\tlearn: 1.2045132\ttotal: 1m 35s\tremaining: 2m 15s\n",
            "620:\tlearn: 1.2044937\ttotal: 1m 35s\tremaining: 2m 15s\n",
            "621:\tlearn: 1.2044727\ttotal: 1m 35s\tremaining: 2m 15s\n",
            "622:\tlearn: 1.2044569\ttotal: 1m 35s\tremaining: 2m 14s\n",
            "623:\tlearn: 1.2044405\ttotal: 1m 36s\tremaining: 2m 14s\n",
            "624:\tlearn: 1.2044197\ttotal: 1m 36s\tremaining: 2m 14s\n",
            "625:\tlearn: 1.2043924\ttotal: 1m 36s\tremaining: 2m 14s\n",
            "626:\tlearn: 1.2043773\ttotal: 1m 36s\tremaining: 2m 14s\n",
            "627:\tlearn: 1.2043515\ttotal: 1m 36s\tremaining: 2m 14s\n",
            "628:\tlearn: 1.2043103\ttotal: 1m 36s\tremaining: 2m 14s\n",
            "629:\tlearn: 1.2042784\ttotal: 1m 37s\tremaining: 2m 14s\n",
            "630:\tlearn: 1.2042605\ttotal: 1m 37s\tremaining: 2m 13s\n",
            "631:\tlearn: 1.2042182\ttotal: 1m 37s\tremaining: 2m 13s\n",
            "632:\tlearn: 1.2042010\ttotal: 1m 37s\tremaining: 2m 13s\n",
            "633:\tlearn: 1.2041726\ttotal: 1m 37s\tremaining: 2m 13s\n",
            "634:\tlearn: 1.2041511\ttotal: 1m 37s\tremaining: 2m 13s\n",
            "635:\tlearn: 1.2041363\ttotal: 1m 37s\tremaining: 2m 13s\n",
            "636:\tlearn: 1.2041081\ttotal: 1m 38s\tremaining: 2m 12s\n",
            "637:\tlearn: 1.2040892\ttotal: 1m 38s\tremaining: 2m 12s\n",
            "638:\tlearn: 1.2040596\ttotal: 1m 38s\tremaining: 2m 12s\n",
            "639:\tlearn: 1.2040395\ttotal: 1m 38s\tremaining: 2m 12s\n",
            "640:\tlearn: 1.2040098\ttotal: 1m 38s\tremaining: 2m 12s\n",
            "641:\tlearn: 1.2039612\ttotal: 1m 38s\tremaining: 2m 12s\n",
            "642:\tlearn: 1.2039340\ttotal: 1m 38s\tremaining: 2m 11s\n",
            "643:\tlearn: 1.2039242\ttotal: 1m 39s\tremaining: 2m 11s\n",
            "644:\tlearn: 1.2039076\ttotal: 1m 39s\tremaining: 2m 11s\n",
            "645:\tlearn: 1.2038903\ttotal: 1m 39s\tremaining: 2m 11s\n",
            "646:\tlearn: 1.2038747\ttotal: 1m 39s\tremaining: 2m 11s\n",
            "647:\tlearn: 1.2038485\ttotal: 1m 39s\tremaining: 2m 10s\n",
            "648:\tlearn: 1.2038247\ttotal: 1m 39s\tremaining: 2m 10s\n",
            "649:\tlearn: 1.2037988\ttotal: 1m 39s\tremaining: 2m 10s\n",
            "650:\tlearn: 1.2037814\ttotal: 1m 40s\tremaining: 2m 10s\n",
            "651:\tlearn: 1.2037558\ttotal: 1m 40s\tremaining: 2m 10s\n",
            "652:\tlearn: 1.2037354\ttotal: 1m 40s\tremaining: 2m 10s\n",
            "653:\tlearn: 1.2037210\ttotal: 1m 40s\tremaining: 2m 9s\n",
            "654:\tlearn: 1.2036979\ttotal: 1m 40s\tremaining: 2m 9s\n",
            "655:\tlearn: 1.2036622\ttotal: 1m 40s\tremaining: 2m 9s\n",
            "656:\tlearn: 1.2036549\ttotal: 1m 40s\tremaining: 2m 9s\n",
            "657:\tlearn: 1.2036336\ttotal: 1m 41s\tremaining: 2m 9s\n",
            "658:\tlearn: 1.2035988\ttotal: 1m 41s\tremaining: 2m 9s\n",
            "659:\tlearn: 1.2035659\ttotal: 1m 41s\tremaining: 2m 8s\n",
            "660:\tlearn: 1.2035443\ttotal: 1m 41s\tremaining: 2m 8s\n",
            "661:\tlearn: 1.2035176\ttotal: 1m 41s\tremaining: 2m 8s\n",
            "662:\tlearn: 1.2034949\ttotal: 1m 41s\tremaining: 2m 8s\n",
            "663:\tlearn: 1.2034726\ttotal: 1m 41s\tremaining: 2m 8s\n",
            "664:\tlearn: 1.2034534\ttotal: 1m 42s\tremaining: 2m 8s\n",
            "665:\tlearn: 1.2034312\ttotal: 1m 42s\tremaining: 2m 7s\n",
            "666:\tlearn: 1.2034145\ttotal: 1m 42s\tremaining: 2m 7s\n",
            "667:\tlearn: 1.2033837\ttotal: 1m 42s\tremaining: 2m 7s\n",
            "668:\tlearn: 1.2033482\ttotal: 1m 42s\tremaining: 2m 7s\n",
            "669:\tlearn: 1.2033272\ttotal: 1m 42s\tremaining: 2m 7s\n",
            "670:\tlearn: 1.2032933\ttotal: 1m 42s\tremaining: 2m 7s\n",
            "671:\tlearn: 1.2032791\ttotal: 1m 43s\tremaining: 2m 6s\n",
            "672:\tlearn: 1.2032521\ttotal: 1m 43s\tremaining: 2m 6s\n",
            "673:\tlearn: 1.2032307\ttotal: 1m 43s\tremaining: 2m 6s\n",
            "674:\tlearn: 1.2032169\ttotal: 1m 43s\tremaining: 2m 6s\n",
            "675:\tlearn: 1.2031905\ttotal: 1m 43s\tremaining: 2m 6s\n",
            "676:\tlearn: 1.2031625\ttotal: 1m 43s\tremaining: 2m 6s\n",
            "677:\tlearn: 1.2031445\ttotal: 1m 43s\tremaining: 2m 5s\n",
            "678:\tlearn: 1.2031288\ttotal: 1m 43s\tremaining: 2m 5s\n",
            "679:\tlearn: 1.2031155\ttotal: 1m 44s\tremaining: 2m 5s\n",
            "680:\tlearn: 1.2030915\ttotal: 1m 44s\tremaining: 2m 5s\n",
            "681:\tlearn: 1.2030784\ttotal: 1m 44s\tremaining: 2m 5s\n",
            "682:\tlearn: 1.2030427\ttotal: 1m 44s\tremaining: 2m 5s\n",
            "683:\tlearn: 1.2029935\ttotal: 1m 44s\tremaining: 2m 4s\n",
            "684:\tlearn: 1.2029781\ttotal: 1m 44s\tremaining: 2m 4s\n",
            "685:\tlearn: 1.2029591\ttotal: 1m 44s\tremaining: 2m 4s\n",
            "686:\tlearn: 1.2029372\ttotal: 1m 45s\tremaining: 2m 4s\n",
            "687:\tlearn: 1.2029210\ttotal: 1m 45s\tremaining: 2m 4s\n",
            "688:\tlearn: 1.2029138\ttotal: 1m 45s\tremaining: 2m 4s\n",
            "689:\tlearn: 1.2028826\ttotal: 1m 45s\tremaining: 2m 3s\n",
            "690:\tlearn: 1.2028622\ttotal: 1m 45s\tremaining: 2m 4s\n",
            "691:\tlearn: 1.2028482\ttotal: 1m 46s\tremaining: 2m 3s\n",
            "692:\tlearn: 1.2028278\ttotal: 1m 46s\tremaining: 2m 3s\n",
            "693:\tlearn: 1.2027974\ttotal: 1m 46s\tremaining: 2m 3s\n",
            "694:\tlearn: 1.2027684\ttotal: 1m 46s\tremaining: 2m 3s\n",
            "695:\tlearn: 1.2027556\ttotal: 1m 47s\tremaining: 2m 3s\n",
            "696:\tlearn: 1.2027422\ttotal: 1m 47s\tremaining: 2m 3s\n",
            "697:\tlearn: 1.2027231\ttotal: 1m 47s\tremaining: 2m 3s\n",
            "698:\tlearn: 1.2027013\ttotal: 1m 47s\tremaining: 2m 3s\n",
            "699:\tlearn: 1.2026901\ttotal: 1m 47s\tremaining: 2m 3s\n",
            "700:\tlearn: 1.2026640\ttotal: 1m 47s\tremaining: 2m 2s\n",
            "701:\tlearn: 1.2026496\ttotal: 1m 47s\tremaining: 2m 2s\n",
            "702:\tlearn: 1.2026250\ttotal: 1m 48s\tremaining: 2m 2s\n",
            "703:\tlearn: 1.2026021\ttotal: 1m 48s\tremaining: 2m 2s\n",
            "704:\tlearn: 1.2025785\ttotal: 1m 48s\tremaining: 2m 2s\n",
            "705:\tlearn: 1.2025641\ttotal: 1m 48s\tremaining: 2m 2s\n",
            "706:\tlearn: 1.2025322\ttotal: 1m 48s\tremaining: 2m 1s\n",
            "707:\tlearn: 1.2024963\ttotal: 1m 48s\tremaining: 2m 1s\n",
            "708:\tlearn: 1.2024720\ttotal: 1m 48s\tremaining: 2m 1s\n",
            "709:\tlearn: 1.2024421\ttotal: 1m 49s\tremaining: 2m 1s\n",
            "710:\tlearn: 1.2024121\ttotal: 1m 49s\tremaining: 2m 1s\n",
            "711:\tlearn: 1.2023873\ttotal: 1m 49s\tremaining: 2m 1s\n",
            "712:\tlearn: 1.2023789\ttotal: 1m 49s\tremaining: 2m\n",
            "713:\tlearn: 1.2023597\ttotal: 1m 49s\tremaining: 2m\n",
            "714:\tlearn: 1.2023430\ttotal: 1m 49s\tremaining: 2m\n",
            "715:\tlearn: 1.2023180\ttotal: 1m 49s\tremaining: 2m\n",
            "716:\tlearn: 1.2022932\ttotal: 1m 50s\tremaining: 2m\n",
            "717:\tlearn: 1.2022572\ttotal: 1m 50s\tremaining: 2m\n",
            "718:\tlearn: 1.2022149\ttotal: 1m 50s\tremaining: 1m 59s\n",
            "719:\tlearn: 1.2022039\ttotal: 1m 50s\tremaining: 1m 59s\n",
            "720:\tlearn: 1.2021898\ttotal: 1m 50s\tremaining: 1m 59s\n",
            "721:\tlearn: 1.2021768\ttotal: 1m 50s\tremaining: 1m 59s\n",
            "722:\tlearn: 1.2021545\ttotal: 1m 50s\tremaining: 1m 59s\n",
            "723:\tlearn: 1.2021417\ttotal: 1m 51s\tremaining: 1m 59s\n",
            "724:\tlearn: 1.2021256\ttotal: 1m 51s\tremaining: 1m 58s\n",
            "725:\tlearn: 1.2020962\ttotal: 1m 51s\tremaining: 1m 58s\n",
            "726:\tlearn: 1.2020762\ttotal: 1m 51s\tremaining: 1m 58s\n",
            "727:\tlearn: 1.2020538\ttotal: 1m 51s\tremaining: 1m 58s\n",
            "728:\tlearn: 1.2020282\ttotal: 1m 51s\tremaining: 1m 58s\n",
            "729:\tlearn: 1.2019860\ttotal: 1m 51s\tremaining: 1m 58s\n",
            "730:\tlearn: 1.2019591\ttotal: 1m 52s\tremaining: 1m 57s\n",
            "731:\tlearn: 1.2019304\ttotal: 1m 52s\tremaining: 1m 57s\n",
            "732:\tlearn: 1.2019174\ttotal: 1m 52s\tremaining: 1m 57s\n",
            "733:\tlearn: 1.2018938\ttotal: 1m 52s\tremaining: 1m 57s\n",
            "734:\tlearn: 1.2018826\ttotal: 1m 52s\tremaining: 1m 57s\n",
            "735:\tlearn: 1.2018668\ttotal: 1m 52s\tremaining: 1m 57s\n",
            "736:\tlearn: 1.2018461\ttotal: 1m 52s\tremaining: 1m 56s\n",
            "737:\tlearn: 1.2018265\ttotal: 1m 53s\tremaining: 1m 56s\n",
            "738:\tlearn: 1.2018017\ttotal: 1m 53s\tremaining: 1m 56s\n",
            "739:\tlearn: 1.2017926\ttotal: 1m 53s\tremaining: 1m 56s\n",
            "740:\tlearn: 1.2017823\ttotal: 1m 53s\tremaining: 1m 56s\n",
            "741:\tlearn: 1.2017686\ttotal: 1m 53s\tremaining: 1m 56s\n",
            "742:\tlearn: 1.2017437\ttotal: 1m 53s\tremaining: 1m 55s\n",
            "743:\tlearn: 1.2017218\ttotal: 1m 53s\tremaining: 1m 55s\n",
            "744:\tlearn: 1.2017039\ttotal: 1m 54s\tremaining: 1m 55s\n",
            "745:\tlearn: 1.2016933\ttotal: 1m 54s\tremaining: 1m 55s\n",
            "746:\tlearn: 1.2016599\ttotal: 1m 54s\tremaining: 1m 55s\n",
            "747:\tlearn: 1.2016350\ttotal: 1m 54s\tremaining: 1m 55s\n",
            "748:\tlearn: 1.2016046\ttotal: 1m 54s\tremaining: 1m 54s\n",
            "749:\tlearn: 1.2015878\ttotal: 1m 54s\tremaining: 1m 54s\n",
            "750:\tlearn: 1.2015499\ttotal: 1m 54s\tremaining: 1m 54s\n",
            "751:\tlearn: 1.2015321\ttotal: 1m 55s\tremaining: 1m 54s\n",
            "752:\tlearn: 1.2015021\ttotal: 1m 55s\tremaining: 1m 54s\n",
            "753:\tlearn: 1.2014844\ttotal: 1m 55s\tremaining: 1m 54s\n",
            "754:\tlearn: 1.2014683\ttotal: 1m 55s\tremaining: 1m 53s\n",
            "755:\tlearn: 1.2014511\ttotal: 1m 55s\tremaining: 1m 53s\n",
            "756:\tlearn: 1.2014277\ttotal: 1m 55s\tremaining: 1m 53s\n",
            "757:\tlearn: 1.2014078\ttotal: 1m 55s\tremaining: 1m 53s\n",
            "758:\tlearn: 1.2013844\ttotal: 1m 56s\tremaining: 1m 53s\n",
            "759:\tlearn: 1.2013716\ttotal: 1m 56s\tremaining: 1m 53s\n",
            "760:\tlearn: 1.2013424\ttotal: 1m 56s\tremaining: 1m 52s\n",
            "761:\tlearn: 1.2013313\ttotal: 1m 56s\tremaining: 1m 52s\n",
            "762:\tlearn: 1.2013130\ttotal: 1m 56s\tremaining: 1m 52s\n",
            "763:\tlearn: 1.2012886\ttotal: 1m 56s\tremaining: 1m 52s\n",
            "764:\tlearn: 1.2012670\ttotal: 1m 56s\tremaining: 1m 52s\n",
            "765:\tlearn: 1.2012549\ttotal: 1m 57s\tremaining: 1m 52s\n",
            "766:\tlearn: 1.2012395\ttotal: 1m 57s\tremaining: 1m 52s\n",
            "767:\tlearn: 1.2012247\ttotal: 1m 57s\tremaining: 1m 52s\n",
            "768:\tlearn: 1.2012034\ttotal: 1m 57s\tremaining: 1m 52s\n",
            "769:\tlearn: 1.2011694\ttotal: 1m 58s\tremaining: 1m 52s\n",
            "770:\tlearn: 1.2011384\ttotal: 1m 58s\tremaining: 1m 51s\n",
            "771:\tlearn: 1.2011285\ttotal: 1m 58s\tremaining: 1m 51s\n",
            "772:\tlearn: 1.2010981\ttotal: 1m 58s\tremaining: 1m 51s\n",
            "773:\tlearn: 1.2010877\ttotal: 1m 58s\tremaining: 1m 51s\n",
            "774:\tlearn: 1.2010676\ttotal: 1m 58s\tremaining: 1m 51s\n",
            "775:\tlearn: 1.2010484\ttotal: 1m 59s\tremaining: 1m 51s\n",
            "776:\tlearn: 1.2010378\ttotal: 1m 59s\tremaining: 1m 50s\n",
            "777:\tlearn: 1.2010112\ttotal: 1m 59s\tremaining: 1m 50s\n",
            "778:\tlearn: 1.2009957\ttotal: 1m 59s\tremaining: 1m 50s\n",
            "779:\tlearn: 1.2009722\ttotal: 1m 59s\tremaining: 1m 50s\n",
            "780:\tlearn: 1.2009586\ttotal: 1m 59s\tremaining: 1m 50s\n",
            "781:\tlearn: 1.2009352\ttotal: 1m 59s\tremaining: 1m 50s\n",
            "782:\tlearn: 1.2009019\ttotal: 2m\tremaining: 1m 49s\n",
            "783:\tlearn: 1.2008395\ttotal: 2m\tremaining: 1m 49s\n",
            "784:\tlearn: 1.2008043\ttotal: 2m\tremaining: 1m 49s\n",
            "785:\tlearn: 1.2007784\ttotal: 2m\tremaining: 1m 49s\n",
            "786:\tlearn: 1.2007664\ttotal: 2m\tremaining: 1m 49s\n",
            "787:\tlearn: 1.2007535\ttotal: 2m\tremaining: 1m 49s\n",
            "788:\tlearn: 1.2007357\ttotal: 2m\tremaining: 1m 49s\n",
            "789:\tlearn: 1.2007223\ttotal: 2m 1s\tremaining: 1m 48s\n",
            "790:\tlearn: 1.2006980\ttotal: 2m 1s\tremaining: 1m 48s\n",
            "791:\tlearn: 1.2006819\ttotal: 2m 1s\tremaining: 1m 48s\n",
            "792:\tlearn: 1.2006592\ttotal: 2m 1s\tremaining: 1m 48s\n",
            "793:\tlearn: 1.2006382\ttotal: 2m 1s\tremaining: 1m 48s\n",
            "794:\tlearn: 1.2006214\ttotal: 2m 1s\tremaining: 1m 48s\n",
            "795:\tlearn: 1.2005978\ttotal: 2m 1s\tremaining: 1m 47s\n",
            "796:\tlearn: 1.2005769\ttotal: 2m 2s\tremaining: 1m 47s\n",
            "797:\tlearn: 1.2005588\ttotal: 2m 2s\tremaining: 1m 47s\n",
            "798:\tlearn: 1.2005401\ttotal: 2m 2s\tremaining: 1m 47s\n",
            "799:\tlearn: 1.2005240\ttotal: 2m 2s\tremaining: 1m 47s\n",
            "800:\tlearn: 1.2005013\ttotal: 2m 2s\tremaining: 1m 47s\n",
            "801:\tlearn: 1.2004730\ttotal: 2m 2s\tremaining: 1m 46s\n",
            "802:\tlearn: 1.2004625\ttotal: 2m 2s\tremaining: 1m 46s\n",
            "803:\tlearn: 1.2004484\ttotal: 2m 3s\tremaining: 1m 46s\n",
            "804:\tlearn: 1.2004222\ttotal: 2m 3s\tremaining: 1m 46s\n",
            "805:\tlearn: 1.2004093\ttotal: 2m 3s\tremaining: 1m 46s\n",
            "806:\tlearn: 1.2003740\ttotal: 2m 3s\tremaining: 1m 46s\n",
            "807:\tlearn: 1.2003521\ttotal: 2m 3s\tremaining: 1m 45s\n",
            "808:\tlearn: 1.2003279\ttotal: 2m 3s\tremaining: 1m 45s\n",
            "809:\tlearn: 1.2003013\ttotal: 2m 3s\tremaining: 1m 45s\n",
            "810:\tlearn: 1.2002879\ttotal: 2m 4s\tremaining: 1m 45s\n",
            "811:\tlearn: 1.2002669\ttotal: 2m 4s\tremaining: 1m 45s\n",
            "812:\tlearn: 1.2002506\ttotal: 2m 4s\tremaining: 1m 45s\n",
            "813:\tlearn: 1.2002292\ttotal: 2m 4s\tremaining: 1m 44s\n",
            "814:\tlearn: 1.2002123\ttotal: 2m 4s\tremaining: 1m 44s\n",
            "815:\tlearn: 1.2001963\ttotal: 2m 4s\tremaining: 1m 44s\n",
            "816:\tlearn: 1.2001783\ttotal: 2m 4s\tremaining: 1m 44s\n",
            "817:\tlearn: 1.2001575\ttotal: 2m 5s\tremaining: 1m 44s\n",
            "818:\tlearn: 1.2001354\ttotal: 2m 5s\tremaining: 1m 44s\n",
            "819:\tlearn: 1.2001130\ttotal: 2m 5s\tremaining: 1m 43s\n",
            "820:\tlearn: 1.2000871\ttotal: 2m 5s\tremaining: 1m 43s\n",
            "821:\tlearn: 1.2000649\ttotal: 2m 5s\tremaining: 1m 43s\n",
            "822:\tlearn: 1.2000412\ttotal: 2m 5s\tremaining: 1m 43s\n",
            "823:\tlearn: 1.2000243\ttotal: 2m 5s\tremaining: 1m 43s\n",
            "824:\tlearn: 1.1999975\ttotal: 2m 6s\tremaining: 1m 43s\n",
            "825:\tlearn: 1.1999711\ttotal: 2m 6s\tremaining: 1m 43s\n",
            "826:\tlearn: 1.1999575\ttotal: 2m 6s\tremaining: 1m 42s\n",
            "827:\tlearn: 1.1999122\ttotal: 2m 6s\tremaining: 1m 42s\n",
            "828:\tlearn: 1.1998871\ttotal: 2m 6s\tremaining: 1m 42s\n",
            "829:\tlearn: 1.1998736\ttotal: 2m 6s\tremaining: 1m 42s\n",
            "830:\tlearn: 1.1998462\ttotal: 2m 6s\tremaining: 1m 42s\n",
            "831:\tlearn: 1.1998140\ttotal: 2m 7s\tremaining: 1m 42s\n",
            "832:\tlearn: 1.1997926\ttotal: 2m 7s\tremaining: 1m 41s\n",
            "833:\tlearn: 1.1997765\ttotal: 2m 7s\tremaining: 1m 41s\n",
            "834:\tlearn: 1.1997687\ttotal: 2m 7s\tremaining: 1m 41s\n",
            "835:\tlearn: 1.1997456\ttotal: 2m 7s\tremaining: 1m 41s\n",
            "836:\tlearn: 1.1997215\ttotal: 2m 7s\tremaining: 1m 41s\n",
            "837:\tlearn: 1.1997007\ttotal: 2m 7s\tremaining: 1m 41s\n",
            "838:\tlearn: 1.1996839\ttotal: 2m 8s\tremaining: 1m 40s\n",
            "839:\tlearn: 1.1996698\ttotal: 2m 8s\tremaining: 1m 40s\n",
            "840:\tlearn: 1.1996318\ttotal: 2m 8s\tremaining: 1m 40s\n",
            "841:\tlearn: 1.1996068\ttotal: 2m 8s\tremaining: 1m 40s\n",
            "842:\tlearn: 1.1995758\ttotal: 2m 9s\tremaining: 1m 40s\n",
            "843:\tlearn: 1.1995629\ttotal: 2m 9s\tremaining: 1m 40s\n",
            "844:\tlearn: 1.1995535\ttotal: 2m 9s\tremaining: 1m 40s\n",
            "845:\tlearn: 1.1995351\ttotal: 2m 9s\tremaining: 1m 40s\n",
            "846:\tlearn: 1.1995089\ttotal: 2m 9s\tremaining: 1m 40s\n",
            "847:\tlearn: 1.1994900\ttotal: 2m 10s\tremaining: 1m 40s\n",
            "848:\tlearn: 1.1994691\ttotal: 2m 10s\tremaining: 1m 39s\n",
            "849:\tlearn: 1.1994547\ttotal: 2m 10s\tremaining: 1m 39s\n",
            "850:\tlearn: 1.1994467\ttotal: 2m 10s\tremaining: 1m 39s\n",
            "851:\tlearn: 1.1994203\ttotal: 2m 10s\tremaining: 1m 39s\n",
            "852:\tlearn: 1.1994064\ttotal: 2m 10s\tremaining: 1m 39s\n",
            "853:\tlearn: 1.1993860\ttotal: 2m 10s\tremaining: 1m 39s\n",
            "854:\tlearn: 1.1993567\ttotal: 2m 11s\tremaining: 1m 38s\n",
            "855:\tlearn: 1.1993272\ttotal: 2m 11s\tremaining: 1m 38s\n",
            "856:\tlearn: 1.1992992\ttotal: 2m 11s\tremaining: 1m 38s\n",
            "857:\tlearn: 1.1992742\ttotal: 2m 11s\tremaining: 1m 38s\n",
            "858:\tlearn: 1.1992553\ttotal: 2m 11s\tremaining: 1m 38s\n",
            "859:\tlearn: 1.1992168\ttotal: 2m 11s\tremaining: 1m 38s\n",
            "860:\tlearn: 1.1992013\ttotal: 2m 11s\tremaining: 1m 37s\n",
            "861:\tlearn: 1.1991862\ttotal: 2m 12s\tremaining: 1m 37s\n",
            "862:\tlearn: 1.1991610\ttotal: 2m 12s\tremaining: 1m 37s\n",
            "863:\tlearn: 1.1991492\ttotal: 2m 12s\tremaining: 1m 37s\n",
            "864:\tlearn: 1.1991234\ttotal: 2m 12s\tremaining: 1m 37s\n",
            "865:\tlearn: 1.1990969\ttotal: 2m 12s\tremaining: 1m 37s\n",
            "866:\tlearn: 1.1990696\ttotal: 2m 12s\tremaining: 1m 36s\n",
            "867:\tlearn: 1.1990606\ttotal: 2m 12s\tremaining: 1m 36s\n",
            "868:\tlearn: 1.1990344\ttotal: 2m 13s\tremaining: 1m 36s\n",
            "869:\tlearn: 1.1990107\ttotal: 2m 13s\tremaining: 1m 36s\n",
            "870:\tlearn: 1.1989781\ttotal: 2m 13s\tremaining: 1m 36s\n",
            "871:\tlearn: 1.1989601\ttotal: 2m 13s\tremaining: 1m 36s\n",
            "872:\tlearn: 1.1989512\ttotal: 2m 13s\tremaining: 1m 36s\n",
            "873:\tlearn: 1.1989316\ttotal: 2m 13s\tremaining: 1m 35s\n",
            "874:\tlearn: 1.1989025\ttotal: 2m 13s\tremaining: 1m 35s\n",
            "875:\tlearn: 1.1988843\ttotal: 2m 14s\tremaining: 1m 35s\n",
            "876:\tlearn: 1.1988743\ttotal: 2m 14s\tremaining: 1m 35s\n",
            "877:\tlearn: 1.1988568\ttotal: 2m 14s\tremaining: 1m 35s\n",
            "878:\tlearn: 1.1988485\ttotal: 2m 14s\tremaining: 1m 35s\n",
            "879:\tlearn: 1.1988321\ttotal: 2m 14s\tremaining: 1m 34s\n",
            "880:\tlearn: 1.1988208\ttotal: 2m 14s\tremaining: 1m 34s\n",
            "881:\tlearn: 1.1987969\ttotal: 2m 14s\tremaining: 1m 34s\n",
            "882:\tlearn: 1.1987797\ttotal: 2m 15s\tremaining: 1m 34s\n",
            "883:\tlearn: 1.1987550\ttotal: 2m 15s\tremaining: 1m 34s\n",
            "884:\tlearn: 1.1987363\ttotal: 2m 15s\tremaining: 1m 34s\n",
            "885:\tlearn: 1.1987147\ttotal: 2m 15s\tremaining: 1m 33s\n",
            "886:\tlearn: 1.1986984\ttotal: 2m 15s\tremaining: 1m 33s\n",
            "887:\tlearn: 1.1986684\ttotal: 2m 15s\tremaining: 1m 33s\n",
            "888:\tlearn: 1.1986485\ttotal: 2m 15s\tremaining: 1m 33s\n",
            "889:\tlearn: 1.1986252\ttotal: 2m 16s\tremaining: 1m 33s\n",
            "890:\tlearn: 1.1986024\ttotal: 2m 16s\tremaining: 1m 33s\n",
            "891:\tlearn: 1.1985897\ttotal: 2m 16s\tremaining: 1m 32s\n",
            "892:\tlearn: 1.1985761\ttotal: 2m 16s\tremaining: 1m 32s\n",
            "893:\tlearn: 1.1985606\ttotal: 2m 16s\tremaining: 1m 32s\n",
            "894:\tlearn: 1.1985401\ttotal: 2m 16s\tremaining: 1m 32s\n",
            "895:\tlearn: 1.1985308\ttotal: 2m 16s\tremaining: 1m 32s\n",
            "896:\tlearn: 1.1985041\ttotal: 2m 17s\tremaining: 1m 32s\n",
            "897:\tlearn: 1.1984771\ttotal: 2m 17s\tremaining: 1m 32s\n",
            "898:\tlearn: 1.1984621\ttotal: 2m 17s\tremaining: 1m 31s\n",
            "899:\tlearn: 1.1984281\ttotal: 2m 17s\tremaining: 1m 31s\n",
            "900:\tlearn: 1.1984140\ttotal: 2m 17s\tremaining: 1m 31s\n",
            "901:\tlearn: 1.1984026\ttotal: 2m 17s\tremaining: 1m 31s\n",
            "902:\tlearn: 1.1983798\ttotal: 2m 17s\tremaining: 1m 31s\n",
            "903:\tlearn: 1.1983582\ttotal: 2m 18s\tremaining: 1m 31s\n",
            "904:\tlearn: 1.1983272\ttotal: 2m 18s\tremaining: 1m 30s\n",
            "905:\tlearn: 1.1983113\ttotal: 2m 18s\tremaining: 1m 30s\n",
            "906:\tlearn: 1.1983027\ttotal: 2m 18s\tremaining: 1m 30s\n",
            "907:\tlearn: 1.1982972\ttotal: 2m 18s\tremaining: 1m 30s\n",
            "908:\tlearn: 1.1982850\ttotal: 2m 18s\tremaining: 1m 30s\n",
            "909:\tlearn: 1.1982750\ttotal: 2m 18s\tremaining: 1m 30s\n",
            "910:\tlearn: 1.1982479\ttotal: 2m 19s\tremaining: 1m 29s\n",
            "911:\tlearn: 1.1982360\ttotal: 2m 19s\tremaining: 1m 29s\n",
            "912:\tlearn: 1.1982187\ttotal: 2m 19s\tremaining: 1m 29s\n",
            "913:\tlearn: 1.1981900\ttotal: 2m 19s\tremaining: 1m 29s\n",
            "914:\tlearn: 1.1981735\ttotal: 2m 19s\tremaining: 1m 29s\n",
            "915:\tlearn: 1.1981446\ttotal: 2m 19s\tremaining: 1m 29s\n",
            "916:\tlearn: 1.1981336\ttotal: 2m 20s\tremaining: 1m 29s\n",
            "917:\tlearn: 1.1981131\ttotal: 2m 20s\tremaining: 1m 28s\n",
            "918:\tlearn: 1.1980943\ttotal: 2m 20s\tremaining: 1m 28s\n",
            "919:\tlearn: 1.1980695\ttotal: 2m 20s\tremaining: 1m 28s\n",
            "920:\tlearn: 1.1980491\ttotal: 2m 21s\tremaining: 1m 28s\n",
            "921:\tlearn: 1.1980236\ttotal: 2m 21s\tremaining: 1m 28s\n",
            "922:\tlearn: 1.1980050\ttotal: 2m 21s\tremaining: 1m 28s\n",
            "923:\tlearn: 1.1979805\ttotal: 2m 21s\tremaining: 1m 28s\n",
            "924:\tlearn: 1.1979600\ttotal: 2m 21s\tremaining: 1m 28s\n",
            "925:\tlearn: 1.1979493\ttotal: 2m 21s\tremaining: 1m 27s\n",
            "926:\tlearn: 1.1979374\ttotal: 2m 22s\tremaining: 1m 27s\n",
            "927:\tlearn: 1.1979096\ttotal: 2m 22s\tremaining: 1m 27s\n",
            "928:\tlearn: 1.1979031\ttotal: 2m 22s\tremaining: 1m 27s\n",
            "929:\tlearn: 1.1978877\ttotal: 2m 22s\tremaining: 1m 27s\n",
            "930:\tlearn: 1.1978679\ttotal: 2m 22s\tremaining: 1m 27s\n",
            "931:\tlearn: 1.1978601\ttotal: 2m 22s\tremaining: 1m 27s\n",
            "932:\tlearn: 1.1978435\ttotal: 2m 22s\tremaining: 1m 26s\n",
            "933:\tlearn: 1.1978190\ttotal: 2m 23s\tremaining: 1m 26s\n",
            "934:\tlearn: 1.1978107\ttotal: 2m 23s\tremaining: 1m 26s\n",
            "935:\tlearn: 1.1978057\ttotal: 2m 23s\tremaining: 1m 26s\n",
            "936:\tlearn: 1.1977906\ttotal: 2m 23s\tremaining: 1m 26s\n",
            "937:\tlearn: 1.1977836\ttotal: 2m 23s\tremaining: 1m 26s\n",
            "938:\tlearn: 1.1977714\ttotal: 2m 23s\tremaining: 1m 25s\n",
            "939:\tlearn: 1.1977479\ttotal: 2m 23s\tremaining: 1m 25s\n",
            "940:\tlearn: 1.1977341\ttotal: 2m 24s\tremaining: 1m 25s\n",
            "941:\tlearn: 1.1977159\ttotal: 2m 24s\tremaining: 1m 25s\n",
            "942:\tlearn: 1.1976852\ttotal: 2m 24s\tremaining: 1m 25s\n",
            "943:\tlearn: 1.1976644\ttotal: 2m 24s\tremaining: 1m 25s\n",
            "944:\tlearn: 1.1976422\ttotal: 2m 24s\tremaining: 1m 24s\n",
            "945:\tlearn: 1.1976289\ttotal: 2m 24s\tremaining: 1m 24s\n",
            "946:\tlearn: 1.1976206\ttotal: 2m 24s\tremaining: 1m 24s\n",
            "947:\tlearn: 1.1976015\ttotal: 2m 25s\tremaining: 1m 24s\n",
            "948:\tlearn: 1.1975924\ttotal: 2m 25s\tremaining: 1m 24s\n",
            "949:\tlearn: 1.1975754\ttotal: 2m 25s\tremaining: 1m 24s\n",
            "950:\tlearn: 1.1975556\ttotal: 2m 25s\tremaining: 1m 23s\n",
            "951:\tlearn: 1.1975341\ttotal: 2m 25s\tremaining: 1m 23s\n",
            "952:\tlearn: 1.1975236\ttotal: 2m 25s\tremaining: 1m 23s\n",
            "953:\tlearn: 1.1975035\ttotal: 2m 25s\tremaining: 1m 23s\n",
            "954:\tlearn: 1.1974868\ttotal: 2m 26s\tremaining: 1m 23s\n",
            "955:\tlearn: 1.1974733\ttotal: 2m 26s\tremaining: 1m 23s\n",
            "956:\tlearn: 1.1974634\ttotal: 2m 26s\tremaining: 1m 23s\n",
            "957:\tlearn: 1.1974453\ttotal: 2m 26s\tremaining: 1m 22s\n",
            "958:\tlearn: 1.1974239\ttotal: 2m 26s\tremaining: 1m 22s\n",
            "959:\tlearn: 1.1974044\ttotal: 2m 26s\tremaining: 1m 22s\n",
            "960:\tlearn: 1.1973894\ttotal: 2m 26s\tremaining: 1m 22s\n",
            "961:\tlearn: 1.1973684\ttotal: 2m 27s\tremaining: 1m 22s\n",
            "962:\tlearn: 1.1973499\ttotal: 2m 27s\tremaining: 1m 22s\n",
            "963:\tlearn: 1.1973374\ttotal: 2m 27s\tremaining: 1m 21s\n",
            "964:\tlearn: 1.1973044\ttotal: 2m 27s\tremaining: 1m 21s\n",
            "965:\tlearn: 1.1972965\ttotal: 2m 27s\tremaining: 1m 21s\n",
            "966:\tlearn: 1.1972727\ttotal: 2m 27s\tremaining: 1m 21s\n",
            "967:\tlearn: 1.1972608\ttotal: 2m 27s\tremaining: 1m 21s\n",
            "968:\tlearn: 1.1972426\ttotal: 2m 28s\tremaining: 1m 21s\n",
            "969:\tlearn: 1.1972234\ttotal: 2m 28s\tremaining: 1m 20s\n",
            "970:\tlearn: 1.1972075\ttotal: 2m 28s\tremaining: 1m 20s\n",
            "971:\tlearn: 1.1971924\ttotal: 2m 28s\tremaining: 1m 20s\n",
            "972:\tlearn: 1.1971702\ttotal: 2m 28s\tremaining: 1m 20s\n",
            "973:\tlearn: 1.1971480\ttotal: 2m 28s\tremaining: 1m 20s\n",
            "974:\tlearn: 1.1971265\ttotal: 2m 28s\tremaining: 1m 20s\n",
            "975:\tlearn: 1.1971107\ttotal: 2m 29s\tremaining: 1m 20s\n",
            "976:\tlearn: 1.1970943\ttotal: 2m 29s\tremaining: 1m 19s\n",
            "977:\tlearn: 1.1970664\ttotal: 2m 29s\tremaining: 1m 19s\n",
            "978:\tlearn: 1.1970359\ttotal: 2m 29s\tremaining: 1m 19s\n",
            "979:\tlearn: 1.1970126\ttotal: 2m 29s\tremaining: 1m 19s\n",
            "980:\tlearn: 1.1969872\ttotal: 2m 29s\tremaining: 1m 19s\n",
            "981:\tlearn: 1.1969693\ttotal: 2m 30s\tremaining: 1m 19s\n",
            "982:\tlearn: 1.1969551\ttotal: 2m 30s\tremaining: 1m 18s\n",
            "983:\tlearn: 1.1969401\ttotal: 2m 30s\tremaining: 1m 18s\n",
            "984:\tlearn: 1.1969239\ttotal: 2m 30s\tremaining: 1m 18s\n",
            "985:\tlearn: 1.1969124\ttotal: 2m 30s\tremaining: 1m 18s\n",
            "986:\tlearn: 1.1968864\ttotal: 2m 30s\tremaining: 1m 18s\n",
            "987:\tlearn: 1.1968691\ttotal: 2m 30s\tremaining: 1m 18s\n",
            "988:\tlearn: 1.1968324\ttotal: 2m 31s\tremaining: 1m 18s\n",
            "989:\tlearn: 1.1968075\ttotal: 2m 31s\tremaining: 1m 17s\n",
            "990:\tlearn: 1.1967968\ttotal: 2m 31s\tremaining: 1m 17s\n",
            "991:\tlearn: 1.1967727\ttotal: 2m 31s\tremaining: 1m 17s\n",
            "992:\tlearn: 1.1967620\ttotal: 2m 31s\tremaining: 1m 17s\n",
            "993:\tlearn: 1.1967363\ttotal: 2m 32s\tremaining: 1m 17s\n",
            "994:\tlearn: 1.1967162\ttotal: 2m 32s\tremaining: 1m 17s\n",
            "995:\tlearn: 1.1966988\ttotal: 2m 32s\tremaining: 1m 17s\n",
            "996:\tlearn: 1.1966890\ttotal: 2m 32s\tremaining: 1m 17s\n",
            "997:\tlearn: 1.1966787\ttotal: 2m 33s\tremaining: 1m 17s\n",
            "998:\tlearn: 1.1966497\ttotal: 2m 33s\tremaining: 1m 16s\n",
            "999:\tlearn: 1.1966340\ttotal: 2m 33s\tremaining: 1m 16s\n",
            "1000:\tlearn: 1.1966157\ttotal: 2m 33s\tremaining: 1m 16s\n",
            "1001:\tlearn: 1.1966013\ttotal: 2m 34s\tremaining: 1m 16s\n",
            "1002:\tlearn: 1.1965907\ttotal: 2m 34s\tremaining: 1m 16s\n",
            "1003:\tlearn: 1.1965599\ttotal: 2m 34s\tremaining: 1m 16s\n",
            "1004:\tlearn: 1.1965450\ttotal: 2m 34s\tremaining: 1m 16s\n",
            "1005:\tlearn: 1.1965298\ttotal: 2m 34s\tremaining: 1m 16s\n",
            "1006:\tlearn: 1.1965148\ttotal: 2m 34s\tremaining: 1m 15s\n",
            "1007:\tlearn: 1.1964816\ttotal: 2m 35s\tremaining: 1m 15s\n",
            "1008:\tlearn: 1.1964614\ttotal: 2m 35s\tremaining: 1m 15s\n",
            "1009:\tlearn: 1.1964508\ttotal: 2m 35s\tremaining: 1m 15s\n",
            "1010:\tlearn: 1.1964434\ttotal: 2m 35s\tremaining: 1m 15s\n",
            "1011:\tlearn: 1.1964314\ttotal: 2m 35s\tremaining: 1m 15s\n",
            "1012:\tlearn: 1.1964229\ttotal: 2m 35s\tremaining: 1m 14s\n",
            "1013:\tlearn: 1.1964089\ttotal: 2m 35s\tremaining: 1m 14s\n",
            "1014:\tlearn: 1.1963760\ttotal: 2m 36s\tremaining: 1m 14s\n",
            "1015:\tlearn: 1.1963463\ttotal: 2m 36s\tremaining: 1m 14s\n",
            "1016:\tlearn: 1.1963174\ttotal: 2m 36s\tremaining: 1m 14s\n",
            "1017:\tlearn: 1.1962972\ttotal: 2m 36s\tremaining: 1m 14s\n",
            "1018:\tlearn: 1.1962884\ttotal: 2m 36s\tremaining: 1m 13s\n",
            "1019:\tlearn: 1.1962842\ttotal: 2m 36s\tremaining: 1m 13s\n",
            "1020:\tlearn: 1.1962714\ttotal: 2m 36s\tremaining: 1m 13s\n",
            "1021:\tlearn: 1.1962546\ttotal: 2m 37s\tremaining: 1m 13s\n",
            "1022:\tlearn: 1.1962398\ttotal: 2m 37s\tremaining: 1m 13s\n",
            "1023:\tlearn: 1.1962107\ttotal: 2m 37s\tremaining: 1m 13s\n",
            "1024:\tlearn: 1.1962011\ttotal: 2m 37s\tremaining: 1m 13s\n",
            "1025:\tlearn: 1.1961794\ttotal: 2m 37s\tremaining: 1m 12s\n",
            "1026:\tlearn: 1.1961595\ttotal: 2m 37s\tremaining: 1m 12s\n",
            "1027:\tlearn: 1.1961542\ttotal: 2m 38s\tremaining: 1m 12s\n",
            "1028:\tlearn: 1.1961437\ttotal: 2m 38s\tremaining: 1m 12s\n",
            "1029:\tlearn: 1.1961375\ttotal: 2m 38s\tremaining: 1m 12s\n",
            "1030:\tlearn: 1.1961082\ttotal: 2m 38s\tremaining: 1m 12s\n",
            "1031:\tlearn: 1.1961054\ttotal: 2m 38s\tremaining: 1m 11s\n",
            "1032:\tlearn: 1.1960908\ttotal: 2m 38s\tremaining: 1m 11s\n",
            "1033:\tlearn: 1.1960722\ttotal: 2m 38s\tremaining: 1m 11s\n",
            "1034:\tlearn: 1.1960421\ttotal: 2m 39s\tremaining: 1m 11s\n",
            "1035:\tlearn: 1.1960278\ttotal: 2m 39s\tremaining: 1m 11s\n",
            "1036:\tlearn: 1.1960091\ttotal: 2m 39s\tremaining: 1m 11s\n",
            "1037:\tlearn: 1.1959903\ttotal: 2m 39s\tremaining: 1m 10s\n",
            "1038:\tlearn: 1.1959668\ttotal: 2m 39s\tremaining: 1m 10s\n",
            "1039:\tlearn: 1.1959565\ttotal: 2m 39s\tremaining: 1m 10s\n",
            "1040:\tlearn: 1.1959413\ttotal: 2m 39s\tremaining: 1m 10s\n",
            "1041:\tlearn: 1.1959120\ttotal: 2m 40s\tremaining: 1m 10s\n",
            "1042:\tlearn: 1.1958840\ttotal: 2m 40s\tremaining: 1m 10s\n",
            "1043:\tlearn: 1.1958744\ttotal: 2m 40s\tremaining: 1m 10s\n",
            "1044:\tlearn: 1.1958624\ttotal: 2m 40s\tremaining: 1m 9s\n",
            "1045:\tlearn: 1.1958457\ttotal: 2m 40s\tremaining: 1m 9s\n",
            "1046:\tlearn: 1.1958193\ttotal: 2m 40s\tremaining: 1m 9s\n",
            "1047:\tlearn: 1.1958080\ttotal: 2m 40s\tremaining: 1m 9s\n",
            "1048:\tlearn: 1.1957931\ttotal: 2m 41s\tremaining: 1m 9s\n",
            "1049:\tlearn: 1.1957866\ttotal: 2m 41s\tremaining: 1m 9s\n",
            "1050:\tlearn: 1.1957642\ttotal: 2m 41s\tremaining: 1m 8s\n",
            "1051:\tlearn: 1.1957592\ttotal: 2m 41s\tremaining: 1m 8s\n",
            "1052:\tlearn: 1.1957467\ttotal: 2m 41s\tremaining: 1m 8s\n",
            "1053:\tlearn: 1.1957206\ttotal: 2m 41s\tremaining: 1m 8s\n",
            "1054:\tlearn: 1.1957019\ttotal: 2m 41s\tremaining: 1m 8s\n",
            "1055:\tlearn: 1.1956850\ttotal: 2m 42s\tremaining: 1m 8s\n",
            "1056:\tlearn: 1.1956755\ttotal: 2m 42s\tremaining: 1m 7s\n",
            "1057:\tlearn: 1.1956620\ttotal: 2m 42s\tremaining: 1m 7s\n",
            "1058:\tlearn: 1.1956409\ttotal: 2m 42s\tremaining: 1m 7s\n",
            "1059:\tlearn: 1.1956339\ttotal: 2m 42s\tremaining: 1m 7s\n",
            "1060:\tlearn: 1.1956116\ttotal: 2m 42s\tremaining: 1m 7s\n",
            "1061:\tlearn: 1.1955788\ttotal: 2m 42s\tremaining: 1m 7s\n",
            "1062:\tlearn: 1.1955613\ttotal: 2m 43s\tremaining: 1m 7s\n",
            "1063:\tlearn: 1.1955544\ttotal: 2m 43s\tremaining: 1m 6s\n",
            "1064:\tlearn: 1.1955351\ttotal: 2m 43s\tremaining: 1m 6s\n",
            "1065:\tlearn: 1.1955148\ttotal: 2m 43s\tremaining: 1m 6s\n",
            "1066:\tlearn: 1.1954968\ttotal: 2m 44s\tremaining: 1m 6s\n",
            "1067:\tlearn: 1.1954614\ttotal: 2m 44s\tremaining: 1m 6s\n",
            "1068:\tlearn: 1.1954508\ttotal: 2m 44s\tremaining: 1m 6s\n",
            "1069:\tlearn: 1.1954308\ttotal: 2m 44s\tremaining: 1m 6s\n",
            "1070:\tlearn: 1.1954123\ttotal: 2m 44s\tremaining: 1m 6s\n",
            "1071:\tlearn: 1.1953938\ttotal: 2m 45s\tremaining: 1m 5s\n",
            "1072:\tlearn: 1.1953661\ttotal: 2m 45s\tremaining: 1m 5s\n",
            "1073:\tlearn: 1.1953584\ttotal: 2m 45s\tremaining: 1m 5s\n",
            "1074:\tlearn: 1.1953378\ttotal: 2m 45s\tremaining: 1m 5s\n",
            "1075:\tlearn: 1.1953200\ttotal: 2m 45s\tremaining: 1m 5s\n",
            "1076:\tlearn: 1.1953033\ttotal: 2m 45s\tremaining: 1m 5s\n",
            "1077:\tlearn: 1.1952990\ttotal: 2m 45s\tremaining: 1m 4s\n",
            "1078:\tlearn: 1.1952759\ttotal: 2m 46s\tremaining: 1m 4s\n",
            "1079:\tlearn: 1.1952633\ttotal: 2m 46s\tremaining: 1m 4s\n",
            "1080:\tlearn: 1.1952372\ttotal: 2m 46s\tremaining: 1m 4s\n",
            "1081:\tlearn: 1.1952297\ttotal: 2m 46s\tremaining: 1m 4s\n",
            "1082:\tlearn: 1.1952251\ttotal: 2m 46s\tremaining: 1m 4s\n",
            "1083:\tlearn: 1.1951977\ttotal: 2m 46s\tremaining: 1m 4s\n",
            "1084:\tlearn: 1.1951832\ttotal: 2m 46s\tremaining: 1m 3s\n",
            "1085:\tlearn: 1.1951539\ttotal: 2m 47s\tremaining: 1m 3s\n",
            "1086:\tlearn: 1.1951241\ttotal: 2m 47s\tremaining: 1m 3s\n",
            "1087:\tlearn: 1.1950941\ttotal: 2m 47s\tremaining: 1m 3s\n",
            "1088:\tlearn: 1.1950636\ttotal: 2m 47s\tremaining: 1m 3s\n",
            "1089:\tlearn: 1.1950438\ttotal: 2m 47s\tremaining: 1m 3s\n",
            "1090:\tlearn: 1.1950285\ttotal: 2m 47s\tremaining: 1m 2s\n",
            "1091:\tlearn: 1.1950109\ttotal: 2m 47s\tremaining: 1m 2s\n",
            "1092:\tlearn: 1.1949901\ttotal: 2m 48s\tremaining: 1m 2s\n",
            "1093:\tlearn: 1.1949670\ttotal: 2m 48s\tremaining: 1m 2s\n",
            "1094:\tlearn: 1.1949462\ttotal: 2m 48s\tremaining: 1m 2s\n",
            "1095:\tlearn: 1.1949347\ttotal: 2m 48s\tremaining: 1m 2s\n",
            "1096:\tlearn: 1.1949097\ttotal: 2m 48s\tremaining: 1m 1s\n",
            "1097:\tlearn: 1.1948962\ttotal: 2m 48s\tremaining: 1m 1s\n",
            "1098:\tlearn: 1.1948797\ttotal: 2m 48s\tremaining: 1m 1s\n",
            "1099:\tlearn: 1.1948655\ttotal: 2m 49s\tremaining: 1m 1s\n",
            "1100:\tlearn: 1.1948384\ttotal: 2m 49s\tremaining: 1m 1s\n",
            "1101:\tlearn: 1.1948203\ttotal: 2m 49s\tremaining: 1m 1s\n",
            "1102:\tlearn: 1.1948028\ttotal: 2m 49s\tremaining: 1m 1s\n",
            "1103:\tlearn: 1.1947959\ttotal: 2m 49s\tremaining: 1m\n",
            "1104:\tlearn: 1.1947755\ttotal: 2m 49s\tremaining: 1m\n",
            "1105:\tlearn: 1.1947580\ttotal: 2m 49s\tremaining: 1m\n",
            "1106:\tlearn: 1.1947469\ttotal: 2m 50s\tremaining: 1m\n",
            "1107:\tlearn: 1.1947248\ttotal: 2m 50s\tremaining: 1m\n",
            "1108:\tlearn: 1.1947185\ttotal: 2m 50s\tremaining: 1m\n",
            "1109:\tlearn: 1.1947068\ttotal: 2m 50s\tremaining: 59.9s\n",
            "1110:\tlearn: 1.1946892\ttotal: 2m 50s\tremaining: 59.8s\n",
            "1111:\tlearn: 1.1946704\ttotal: 2m 50s\tremaining: 59.6s\n",
            "1112:\tlearn: 1.1946612\ttotal: 2m 50s\tremaining: 59.4s\n",
            "1113:\tlearn: 1.1946523\ttotal: 2m 51s\tremaining: 59.3s\n",
            "1114:\tlearn: 1.1946245\ttotal: 2m 51s\tremaining: 59.1s\n",
            "1115:\tlearn: 1.1946041\ttotal: 2m 51s\tremaining: 59s\n",
            "1116:\tlearn: 1.1945924\ttotal: 2m 51s\tremaining: 58.8s\n",
            "1117:\tlearn: 1.1945786\ttotal: 2m 51s\tremaining: 58.7s\n",
            "1118:\tlearn: 1.1945668\ttotal: 2m 51s\tremaining: 58.5s\n",
            "1119:\tlearn: 1.1945557\ttotal: 2m 51s\tremaining: 58.3s\n",
            "1120:\tlearn: 1.1945211\ttotal: 2m 52s\tremaining: 58.2s\n",
            "1121:\tlearn: 1.1945166\ttotal: 2m 52s\tremaining: 58s\n",
            "1122:\tlearn: 1.1944986\ttotal: 2m 52s\tremaining: 57.9s\n",
            "1123:\tlearn: 1.1944831\ttotal: 2m 52s\tremaining: 57.7s\n",
            "1124:\tlearn: 1.1944716\ttotal: 2m 52s\tremaining: 57.6s\n",
            "1125:\tlearn: 1.1944473\ttotal: 2m 52s\tremaining: 57.4s\n",
            "1126:\tlearn: 1.1944214\ttotal: 2m 52s\tremaining: 57.3s\n",
            "1127:\tlearn: 1.1943939\ttotal: 2m 53s\tremaining: 57.1s\n",
            "1128:\tlearn: 1.1943782\ttotal: 2m 53s\tremaining: 56.9s\n",
            "1129:\tlearn: 1.1943541\ttotal: 2m 53s\tremaining: 56.8s\n",
            "1130:\tlearn: 1.1943422\ttotal: 2m 53s\tremaining: 56.6s\n",
            "1131:\tlearn: 1.1943169\ttotal: 2m 53s\tremaining: 56.5s\n",
            "1132:\tlearn: 1.1942941\ttotal: 2m 53s\tremaining: 56.3s\n",
            "1133:\tlearn: 1.1942736\ttotal: 2m 54s\tremaining: 56.2s\n",
            "1134:\tlearn: 1.1942630\ttotal: 2m 54s\tremaining: 56s\n",
            "1135:\tlearn: 1.1942300\ttotal: 2m 54s\tremaining: 55.9s\n",
            "1136:\tlearn: 1.1942113\ttotal: 2m 54s\tremaining: 55.7s\n",
            "1137:\tlearn: 1.1941878\ttotal: 2m 54s\tremaining: 55.6s\n",
            "1138:\tlearn: 1.1941792\ttotal: 2m 55s\tremaining: 55.5s\n",
            "1139:\tlearn: 1.1941701\ttotal: 2m 55s\tremaining: 55.3s\n",
            "1140:\tlearn: 1.1941563\ttotal: 2m 55s\tremaining: 55.2s\n",
            "1141:\tlearn: 1.1941363\ttotal: 2m 55s\tremaining: 55.1s\n",
            "1142:\tlearn: 1.1941182\ttotal: 2m 55s\tremaining: 55s\n",
            "1143:\tlearn: 1.1941007\ttotal: 2m 56s\tremaining: 54.8s\n",
            "1144:\tlearn: 1.1940939\ttotal: 2m 56s\tremaining: 54.6s\n",
            "1145:\tlearn: 1.1940700\ttotal: 2m 56s\tremaining: 54.5s\n",
            "1146:\tlearn: 1.1940589\ttotal: 2m 56s\tremaining: 54.3s\n",
            "1147:\tlearn: 1.1940396\ttotal: 2m 56s\tremaining: 54.2s\n",
            "1148:\tlearn: 1.1940247\ttotal: 2m 56s\tremaining: 54s\n",
            "1149:\tlearn: 1.1940159\ttotal: 2m 56s\tremaining: 53.9s\n",
            "1150:\tlearn: 1.1939883\ttotal: 2m 57s\tremaining: 53.7s\n",
            "1151:\tlearn: 1.1939669\ttotal: 2m 57s\tremaining: 53.5s\n",
            "1152:\tlearn: 1.1939515\ttotal: 2m 57s\tremaining: 53.4s\n",
            "1153:\tlearn: 1.1939357\ttotal: 2m 57s\tremaining: 53.2s\n",
            "1154:\tlearn: 1.1939149\ttotal: 2m 57s\tremaining: 53.1s\n",
            "1155:\tlearn: 1.1938940\ttotal: 2m 57s\tremaining: 52.9s\n",
            "1156:\tlearn: 1.1938754\ttotal: 2m 58s\tremaining: 52.8s\n",
            "1157:\tlearn: 1.1938557\ttotal: 2m 58s\tremaining: 52.6s\n",
            "1158:\tlearn: 1.1938321\ttotal: 2m 58s\tremaining: 52.5s\n",
            "1159:\tlearn: 1.1938264\ttotal: 2m 58s\tremaining: 52.4s\n",
            "1160:\tlearn: 1.1938159\ttotal: 2m 58s\tremaining: 52.2s\n",
            "1161:\tlearn: 1.1937907\ttotal: 2m 58s\tremaining: 52.1s\n",
            "1162:\tlearn: 1.1937623\ttotal: 2m 59s\tremaining: 51.9s\n",
            "1163:\tlearn: 1.1937433\ttotal: 2m 59s\tremaining: 51.8s\n",
            "1164:\tlearn: 1.1937386\ttotal: 2m 59s\tremaining: 51.6s\n",
            "1165:\tlearn: 1.1937247\ttotal: 2m 59s\tremaining: 51.5s\n",
            "1166:\tlearn: 1.1937092\ttotal: 2m 59s\tremaining: 51.3s\n",
            "1167:\tlearn: 1.1936844\ttotal: 3m\tremaining: 51.2s\n",
            "1168:\tlearn: 1.1936687\ttotal: 3m\tremaining: 51s\n",
            "1169:\tlearn: 1.1936458\ttotal: 3m\tremaining: 50.9s\n",
            "1170:\tlearn: 1.1936263\ttotal: 3m\tremaining: 50.7s\n",
            "1171:\tlearn: 1.1936079\ttotal: 3m\tremaining: 50.6s\n",
            "1172:\tlearn: 1.1935977\ttotal: 3m\tremaining: 50.4s\n",
            "1173:\tlearn: 1.1935830\ttotal: 3m\tremaining: 50.2s\n",
            "1174:\tlearn: 1.1935744\ttotal: 3m 1s\tremaining: 50.1s\n",
            "1175:\tlearn: 1.1935493\ttotal: 3m 1s\tremaining: 49.9s\n",
            "1176:\tlearn: 1.1935389\ttotal: 3m 1s\tremaining: 49.8s\n",
            "1177:\tlearn: 1.1935277\ttotal: 3m 1s\tremaining: 49.6s\n",
            "1178:\tlearn: 1.1935058\ttotal: 3m 1s\tremaining: 49.5s\n",
            "1179:\tlearn: 1.1934956\ttotal: 3m 1s\tremaining: 49.3s\n",
            "1180:\tlearn: 1.1934770\ttotal: 3m 1s\tremaining: 49.1s\n",
            "1181:\tlearn: 1.1934561\ttotal: 3m 2s\tremaining: 49s\n",
            "1182:\tlearn: 1.1934320\ttotal: 3m 2s\tremaining: 48.8s\n",
            "1183:\tlearn: 1.1934175\ttotal: 3m 2s\tremaining: 48.7s\n",
            "1184:\tlearn: 1.1933976\ttotal: 3m 2s\tremaining: 48.5s\n",
            "1185:\tlearn: 1.1933801\ttotal: 3m 2s\tremaining: 48.4s\n",
            "1186:\tlearn: 1.1933631\ttotal: 3m 2s\tremaining: 48.2s\n",
            "1187:\tlearn: 1.1933589\ttotal: 3m 2s\tremaining: 48s\n",
            "1188:\tlearn: 1.1933458\ttotal: 3m 3s\tremaining: 47.9s\n",
            "1189:\tlearn: 1.1933331\ttotal: 3m 3s\tremaining: 47.7s\n",
            "1190:\tlearn: 1.1933227\ttotal: 3m 3s\tremaining: 47.6s\n",
            "1191:\tlearn: 1.1933055\ttotal: 3m 3s\tremaining: 47.4s\n",
            "1192:\tlearn: 1.1932832\ttotal: 3m 3s\tremaining: 47.3s\n",
            "1193:\tlearn: 1.1932652\ttotal: 3m 3s\tremaining: 47.1s\n",
            "1194:\tlearn: 1.1932476\ttotal: 3m 3s\tremaining: 47s\n",
            "1195:\tlearn: 1.1932260\ttotal: 3m 4s\tremaining: 46.8s\n",
            "1196:\tlearn: 1.1932048\ttotal: 3m 4s\tremaining: 46.7s\n",
            "1197:\tlearn: 1.1931944\ttotal: 3m 4s\tremaining: 46.5s\n",
            "1198:\tlearn: 1.1931743\ttotal: 3m 4s\tremaining: 46.3s\n",
            "1199:\tlearn: 1.1931494\ttotal: 3m 4s\tremaining: 46.2s\n",
            "1200:\tlearn: 1.1931327\ttotal: 3m 4s\tremaining: 46s\n",
            "1201:\tlearn: 1.1931208\ttotal: 3m 5s\tremaining: 45.9s\n",
            "1202:\tlearn: 1.1931083\ttotal: 3m 5s\tremaining: 45.7s\n",
            "1203:\tlearn: 1.1930937\ttotal: 3m 5s\tremaining: 45.5s\n",
            "1204:\tlearn: 1.1930819\ttotal: 3m 5s\tremaining: 45.4s\n",
            "1205:\tlearn: 1.1930729\ttotal: 3m 5s\tremaining: 45.2s\n",
            "1206:\tlearn: 1.1930579\ttotal: 3m 5s\tremaining: 45.1s\n",
            "1207:\tlearn: 1.1930415\ttotal: 3m 5s\tremaining: 44.9s\n",
            "1208:\tlearn: 1.1930266\ttotal: 3m 6s\tremaining: 44.8s\n",
            "1209:\tlearn: 1.1930147\ttotal: 3m 6s\tremaining: 44.7s\n",
            "1210:\tlearn: 1.1930049\ttotal: 3m 6s\tremaining: 44.5s\n",
            "1211:\tlearn: 1.1929906\ttotal: 3m 6s\tremaining: 44.4s\n",
            "1212:\tlearn: 1.1929798\ttotal: 3m 7s\tremaining: 44.3s\n",
            "1213:\tlearn: 1.1929632\ttotal: 3m 7s\tremaining: 44.1s\n",
            "1214:\tlearn: 1.1929477\ttotal: 3m 7s\tremaining: 44s\n",
            "1215:\tlearn: 1.1929232\ttotal: 3m 7s\tremaining: 43.8s\n",
            "1216:\tlearn: 1.1928898\ttotal: 3m 7s\tremaining: 43.7s\n",
            "1217:\tlearn: 1.1928658\ttotal: 3m 7s\tremaining: 43.5s\n",
            "1218:\tlearn: 1.1928489\ttotal: 3m 8s\tremaining: 43.4s\n",
            "1219:\tlearn: 1.1928290\ttotal: 3m 8s\tremaining: 43.2s\n",
            "1220:\tlearn: 1.1928131\ttotal: 3m 8s\tremaining: 43s\n",
            "1221:\tlearn: 1.1927997\ttotal: 3m 8s\tremaining: 42.9s\n",
            "1222:\tlearn: 1.1927818\ttotal: 3m 8s\tremaining: 42.7s\n",
            "1223:\tlearn: 1.1927643\ttotal: 3m 8s\tremaining: 42.6s\n",
            "1224:\tlearn: 1.1927529\ttotal: 3m 8s\tremaining: 42.4s\n",
            "1225:\tlearn: 1.1927370\ttotal: 3m 9s\tremaining: 42.3s\n",
            "1226:\tlearn: 1.1927225\ttotal: 3m 9s\tremaining: 42.1s\n",
            "1227:\tlearn: 1.1926968\ttotal: 3m 9s\tremaining: 41.9s\n",
            "1228:\tlearn: 1.1926801\ttotal: 3m 9s\tremaining: 41.8s\n",
            "1229:\tlearn: 1.1926628\ttotal: 3m 9s\tremaining: 41.6s\n",
            "1230:\tlearn: 1.1926469\ttotal: 3m 9s\tremaining: 41.5s\n",
            "1231:\tlearn: 1.1926223\ttotal: 3m 9s\tremaining: 41.3s\n",
            "1232:\tlearn: 1.1926057\ttotal: 3m 10s\tremaining: 41.2s\n",
            "1233:\tlearn: 1.1925872\ttotal: 3m 10s\tremaining: 41s\n",
            "1234:\tlearn: 1.1925731\ttotal: 3m 10s\tremaining: 40.9s\n",
            "1235:\tlearn: 1.1925583\ttotal: 3m 10s\tremaining: 40.7s\n",
            "1236:\tlearn: 1.1925361\ttotal: 3m 10s\tremaining: 40.5s\n",
            "1237:\tlearn: 1.1925139\ttotal: 3m 10s\tremaining: 40.4s\n",
            "1238:\tlearn: 1.1924899\ttotal: 3m 10s\tremaining: 40.2s\n",
            "1239:\tlearn: 1.1924668\ttotal: 3m 11s\tremaining: 40.1s\n",
            "1240:\tlearn: 1.1924500\ttotal: 3m 11s\tremaining: 39.9s\n",
            "1241:\tlearn: 1.1924392\ttotal: 3m 11s\tremaining: 39.8s\n",
            "1242:\tlearn: 1.1924252\ttotal: 3m 11s\tremaining: 39.6s\n",
            "1243:\tlearn: 1.1924126\ttotal: 3m 11s\tremaining: 39.5s\n",
            "1244:\tlearn: 1.1923854\ttotal: 3m 11s\tremaining: 39.3s\n",
            "1245:\tlearn: 1.1923533\ttotal: 3m 12s\tremaining: 39.1s\n",
            "1246:\tlearn: 1.1923383\ttotal: 3m 12s\tremaining: 39s\n",
            "1247:\tlearn: 1.1923247\ttotal: 3m 12s\tremaining: 38.8s\n",
            "1248:\tlearn: 1.1923179\ttotal: 3m 12s\tremaining: 38.7s\n",
            "1249:\tlearn: 1.1923015\ttotal: 3m 12s\tremaining: 38.5s\n",
            "1250:\tlearn: 1.1922910\ttotal: 3m 12s\tremaining: 38.4s\n",
            "1251:\tlearn: 1.1922792\ttotal: 3m 12s\tremaining: 38.2s\n",
            "1252:\tlearn: 1.1922623\ttotal: 3m 13s\tremaining: 38.1s\n",
            "1253:\tlearn: 1.1922471\ttotal: 3m 13s\tremaining: 37.9s\n",
            "1254:\tlearn: 1.1922367\ttotal: 3m 13s\tremaining: 37.7s\n",
            "1255:\tlearn: 1.1922245\ttotal: 3m 13s\tremaining: 37.6s\n",
            "1256:\tlearn: 1.1922131\ttotal: 3m 13s\tremaining: 37.4s\n",
            "1257:\tlearn: 1.1922096\ttotal: 3m 13s\tremaining: 37.3s\n",
            "1258:\tlearn: 1.1921873\ttotal: 3m 13s\tremaining: 37.1s\n",
            "1259:\tlearn: 1.1921649\ttotal: 3m 14s\tremaining: 37s\n",
            "1260:\tlearn: 1.1921440\ttotal: 3m 14s\tremaining: 36.8s\n",
            "1261:\tlearn: 1.1921313\ttotal: 3m 14s\tremaining: 36.6s\n",
            "1262:\tlearn: 1.1921244\ttotal: 3m 14s\tremaining: 36.5s\n",
            "1263:\tlearn: 1.1920999\ttotal: 3m 14s\tremaining: 36.3s\n",
            "1264:\tlearn: 1.1920960\ttotal: 3m 14s\tremaining: 36.2s\n",
            "1265:\tlearn: 1.1920821\ttotal: 3m 14s\tremaining: 36s\n",
            "1266:\tlearn: 1.1920670\ttotal: 3m 14s\tremaining: 35.9s\n",
            "1267:\tlearn: 1.1920443\ttotal: 3m 15s\tremaining: 35.7s\n",
            "1268:\tlearn: 1.1920113\ttotal: 3m 15s\tremaining: 35.5s\n",
            "1269:\tlearn: 1.1919859\ttotal: 3m 15s\tremaining: 35.4s\n",
            "1270:\tlearn: 1.1919600\ttotal: 3m 15s\tremaining: 35.2s\n",
            "1271:\tlearn: 1.1919511\ttotal: 3m 15s\tremaining: 35.1s\n",
            "1272:\tlearn: 1.1919257\ttotal: 3m 15s\tremaining: 34.9s\n",
            "1273:\tlearn: 1.1919088\ttotal: 3m 16s\tremaining: 34.8s\n",
            "1274:\tlearn: 1.1918970\ttotal: 3m 16s\tremaining: 34.6s\n",
            "1275:\tlearn: 1.1918792\ttotal: 3m 16s\tremaining: 34.5s\n",
            "1276:\tlearn: 1.1918691\ttotal: 3m 16s\tremaining: 34.3s\n",
            "1277:\tlearn: 1.1918504\ttotal: 3m 16s\tremaining: 34.2s\n",
            "1278:\tlearn: 1.1918343\ttotal: 3m 16s\tremaining: 34s\n",
            "1279:\tlearn: 1.1918187\ttotal: 3m 16s\tremaining: 33.8s\n",
            "1280:\tlearn: 1.1918033\ttotal: 3m 17s\tremaining: 33.7s\n",
            "1281:\tlearn: 1.1917838\ttotal: 3m 17s\tremaining: 33.5s\n",
            "1282:\tlearn: 1.1917746\ttotal: 3m 17s\tremaining: 33.4s\n",
            "1283:\tlearn: 1.1917616\ttotal: 3m 17s\tremaining: 33.2s\n",
            "1284:\tlearn: 1.1917411\ttotal: 3m 17s\tremaining: 33.1s\n",
            "1285:\tlearn: 1.1917245\ttotal: 3m 18s\tremaining: 33s\n",
            "1286:\tlearn: 1.1917139\ttotal: 3m 18s\tremaining: 32.8s\n",
            "1287:\tlearn: 1.1916965\ttotal: 3m 18s\tremaining: 32.7s\n",
            "1288:\tlearn: 1.1916860\ttotal: 3m 18s\tremaining: 32.5s\n",
            "1289:\tlearn: 1.1916599\ttotal: 3m 18s\tremaining: 32.4s\n",
            "1290:\tlearn: 1.1916492\ttotal: 3m 19s\tremaining: 32.2s\n",
            "1291:\tlearn: 1.1916302\ttotal: 3m 19s\tremaining: 32.1s\n",
            "1292:\tlearn: 1.1916201\ttotal: 3m 19s\tremaining: 31.9s\n",
            "1293:\tlearn: 1.1916009\ttotal: 3m 19s\tremaining: 31.8s\n",
            "1294:\tlearn: 1.1915809\ttotal: 3m 19s\tremaining: 31.6s\n",
            "1295:\tlearn: 1.1915615\ttotal: 3m 19s\tremaining: 31.5s\n",
            "1296:\tlearn: 1.1915338\ttotal: 3m 20s\tremaining: 31.3s\n",
            "1297:\tlearn: 1.1915097\ttotal: 3m 20s\tremaining: 31.2s\n",
            "1298:\tlearn: 1.1914950\ttotal: 3m 20s\tremaining: 31s\n",
            "1299:\tlearn: 1.1914674\ttotal: 3m 20s\tremaining: 30.8s\n",
            "1300:\tlearn: 1.1914467\ttotal: 3m 20s\tremaining: 30.7s\n",
            "1301:\tlearn: 1.1914248\ttotal: 3m 20s\tremaining: 30.5s\n",
            "1302:\tlearn: 1.1914167\ttotal: 3m 20s\tremaining: 30.4s\n",
            "1303:\tlearn: 1.1913932\ttotal: 3m 21s\tremaining: 30.2s\n",
            "1304:\tlearn: 1.1913724\ttotal: 3m 21s\tremaining: 30.1s\n",
            "1305:\tlearn: 1.1913551\ttotal: 3m 21s\tremaining: 29.9s\n",
            "1306:\tlearn: 1.1913397\ttotal: 3m 21s\tremaining: 29.8s\n",
            "1307:\tlearn: 1.1913320\ttotal: 3m 21s\tremaining: 29.6s\n",
            "1308:\tlearn: 1.1913240\ttotal: 3m 21s\tremaining: 29.4s\n",
            "1309:\tlearn: 1.1913095\ttotal: 3m 21s\tremaining: 29.3s\n",
            "1310:\tlearn: 1.1912957\ttotal: 3m 22s\tremaining: 29.1s\n",
            "1311:\tlearn: 1.1912875\ttotal: 3m 22s\tremaining: 29s\n",
            "1312:\tlearn: 1.1912704\ttotal: 3m 22s\tremaining: 28.8s\n",
            "1313:\tlearn: 1.1912599\ttotal: 3m 22s\tremaining: 28.7s\n",
            "1314:\tlearn: 1.1912406\ttotal: 3m 22s\tremaining: 28.5s\n",
            "1315:\tlearn: 1.1912309\ttotal: 3m 22s\tremaining: 28.4s\n",
            "1316:\tlearn: 1.1912109\ttotal: 3m 22s\tremaining: 28.2s\n",
            "1317:\tlearn: 1.1911911\ttotal: 3m 23s\tremaining: 28s\n",
            "1318:\tlearn: 1.1911696\ttotal: 3m 23s\tremaining: 27.9s\n",
            "1319:\tlearn: 1.1911560\ttotal: 3m 23s\tremaining: 27.7s\n",
            "1320:\tlearn: 1.1911406\ttotal: 3m 23s\tremaining: 27.6s\n",
            "1321:\tlearn: 1.1911163\ttotal: 3m 23s\tremaining: 27.4s\n",
            "1322:\tlearn: 1.1910977\ttotal: 3m 23s\tremaining: 27.3s\n",
            "1323:\tlearn: 1.1910871\ttotal: 3m 23s\tremaining: 27.1s\n",
            "1324:\tlearn: 1.1910734\ttotal: 3m 24s\tremaining: 27s\n",
            "1325:\tlearn: 1.1910590\ttotal: 3m 24s\tremaining: 26.8s\n",
            "1326:\tlearn: 1.1910439\ttotal: 3m 24s\tremaining: 26.6s\n",
            "1327:\tlearn: 1.1910374\ttotal: 3m 24s\tremaining: 26.5s\n",
            "1328:\tlearn: 1.1910263\ttotal: 3m 24s\tremaining: 26.3s\n",
            "1329:\tlearn: 1.1910196\ttotal: 3m 24s\tremaining: 26.2s\n",
            "1330:\tlearn: 1.1910074\ttotal: 3m 24s\tremaining: 26s\n",
            "1331:\tlearn: 1.1910038\ttotal: 3m 25s\tremaining: 25.9s\n",
            "1332:\tlearn: 1.1909974\ttotal: 3m 25s\tremaining: 25.7s\n",
            "1333:\tlearn: 1.1909882\ttotal: 3m 25s\tremaining: 25.6s\n",
            "1334:\tlearn: 1.1909728\ttotal: 3m 25s\tremaining: 25.4s\n",
            "1335:\tlearn: 1.1909635\ttotal: 3m 25s\tremaining: 25.2s\n",
            "1336:\tlearn: 1.1909464\ttotal: 3m 25s\tremaining: 25.1s\n",
            "1337:\tlearn: 1.1909275\ttotal: 3m 25s\tremaining: 24.9s\n",
            "1338:\tlearn: 1.1909046\ttotal: 3m 26s\tremaining: 24.8s\n",
            "1339:\tlearn: 1.1908905\ttotal: 3m 26s\tremaining: 24.6s\n",
            "1340:\tlearn: 1.1908700\ttotal: 3m 26s\tremaining: 24.5s\n",
            "1341:\tlearn: 1.1908583\ttotal: 3m 26s\tremaining: 24.3s\n",
            "1342:\tlearn: 1.1908464\ttotal: 3m 26s\tremaining: 24.2s\n",
            "1343:\tlearn: 1.1908336\ttotal: 3m 26s\tremaining: 24s\n",
            "1344:\tlearn: 1.1908232\ttotal: 3m 26s\tremaining: 23.9s\n",
            "1345:\tlearn: 1.1908090\ttotal: 3m 27s\tremaining: 23.7s\n",
            "1346:\tlearn: 1.1907976\ttotal: 3m 27s\tremaining: 23.5s\n",
            "1347:\tlearn: 1.1907926\ttotal: 3m 27s\tremaining: 23.4s\n",
            "1348:\tlearn: 1.1907791\ttotal: 3m 27s\tremaining: 23.2s\n",
            "1349:\tlearn: 1.1907612\ttotal: 3m 27s\tremaining: 23.1s\n",
            "1350:\tlearn: 1.1907557\ttotal: 3m 27s\tremaining: 22.9s\n",
            "1351:\tlearn: 1.1907433\ttotal: 3m 27s\tremaining: 22.8s\n",
            "1352:\tlearn: 1.1907260\ttotal: 3m 28s\tremaining: 22.6s\n",
            "1353:\tlearn: 1.1907126\ttotal: 3m 28s\tremaining: 22.5s\n",
            "1354:\tlearn: 1.1906946\ttotal: 3m 28s\tremaining: 22.3s\n",
            "1355:\tlearn: 1.1906833\ttotal: 3m 28s\tremaining: 22.1s\n",
            "1356:\tlearn: 1.1906618\ttotal: 3m 28s\tremaining: 22s\n",
            "1357:\tlearn: 1.1906457\ttotal: 3m 28s\tremaining: 21.8s\n",
            "1358:\tlearn: 1.1906280\ttotal: 3m 29s\tremaining: 21.7s\n",
            "1359:\tlearn: 1.1905988\ttotal: 3m 29s\tremaining: 21.6s\n",
            "1360:\tlearn: 1.1905832\ttotal: 3m 29s\tremaining: 21.4s\n",
            "1361:\tlearn: 1.1905753\ttotal: 3m 30s\tremaining: 21.3s\n",
            "1362:\tlearn: 1.1905592\ttotal: 3m 30s\tremaining: 21.1s\n",
            "1363:\tlearn: 1.1905461\ttotal: 3m 30s\tremaining: 21s\n",
            "1364:\tlearn: 1.1905300\ttotal: 3m 30s\tremaining: 20.8s\n",
            "1365:\tlearn: 1.1905147\ttotal: 3m 30s\tremaining: 20.7s\n",
            "1366:\tlearn: 1.1904900\ttotal: 3m 30s\tremaining: 20.5s\n",
            "1367:\tlearn: 1.1904776\ttotal: 3m 31s\tremaining: 20.4s\n",
            "1368:\tlearn: 1.1904579\ttotal: 3m 31s\tremaining: 20.2s\n",
            "1369:\tlearn: 1.1904397\ttotal: 3m 31s\tremaining: 20s\n",
            "1370:\tlearn: 1.1904279\ttotal: 3m 31s\tremaining: 19.9s\n",
            "1371:\tlearn: 1.1904047\ttotal: 3m 31s\tremaining: 19.7s\n",
            "1372:\tlearn: 1.1903932\ttotal: 3m 31s\tremaining: 19.6s\n",
            "1373:\tlearn: 1.1903800\ttotal: 3m 31s\tremaining: 19.4s\n",
            "1374:\tlearn: 1.1903656\ttotal: 3m 32s\tremaining: 19.3s\n",
            "1375:\tlearn: 1.1903543\ttotal: 3m 32s\tremaining: 19.1s\n",
            "1376:\tlearn: 1.1903346\ttotal: 3m 32s\tremaining: 19s\n",
            "1377:\tlearn: 1.1903248\ttotal: 3m 32s\tremaining: 18.8s\n",
            "1378:\tlearn: 1.1903130\ttotal: 3m 32s\tremaining: 18.7s\n",
            "1379:\tlearn: 1.1902980\ttotal: 3m 32s\tremaining: 18.5s\n",
            "1380:\tlearn: 1.1902776\ttotal: 3m 32s\tremaining: 18.3s\n",
            "1381:\tlearn: 1.1902648\ttotal: 3m 33s\tremaining: 18.2s\n",
            "1382:\tlearn: 1.1902571\ttotal: 3m 33s\tremaining: 18s\n",
            "1383:\tlearn: 1.1902408\ttotal: 3m 33s\tremaining: 17.9s\n",
            "1384:\tlearn: 1.1902244\ttotal: 3m 33s\tremaining: 17.7s\n",
            "1385:\tlearn: 1.1901967\ttotal: 3m 33s\tremaining: 17.6s\n",
            "1386:\tlearn: 1.1901845\ttotal: 3m 33s\tremaining: 17.4s\n",
            "1387:\tlearn: 1.1901650\ttotal: 3m 33s\tremaining: 17.3s\n",
            "1388:\tlearn: 1.1901529\ttotal: 3m 34s\tremaining: 17.1s\n",
            "1389:\tlearn: 1.1901389\ttotal: 3m 34s\tremaining: 16.9s\n",
            "1390:\tlearn: 1.1901146\ttotal: 3m 34s\tremaining: 16.8s\n",
            "1391:\tlearn: 1.1901044\ttotal: 3m 34s\tremaining: 16.6s\n",
            "1392:\tlearn: 1.1900881\ttotal: 3m 34s\tremaining: 16.5s\n",
            "1393:\tlearn: 1.1900782\ttotal: 3m 34s\tremaining: 16.3s\n",
            "1394:\tlearn: 1.1900646\ttotal: 3m 34s\tremaining: 16.2s\n",
            "1395:\tlearn: 1.1900485\ttotal: 3m 35s\tremaining: 16s\n",
            "1396:\tlearn: 1.1900173\ttotal: 3m 35s\tremaining: 15.9s\n",
            "1397:\tlearn: 1.1899956\ttotal: 3m 35s\tremaining: 15.7s\n",
            "1398:\tlearn: 1.1899677\ttotal: 3m 35s\tremaining: 15.6s\n",
            "1399:\tlearn: 1.1899588\ttotal: 3m 35s\tremaining: 15.4s\n",
            "1400:\tlearn: 1.1899321\ttotal: 3m 35s\tremaining: 15.2s\n",
            "1401:\tlearn: 1.1899110\ttotal: 3m 35s\tremaining: 15.1s\n",
            "1402:\tlearn: 1.1899006\ttotal: 3m 36s\tremaining: 14.9s\n",
            "1403:\tlearn: 1.1898823\ttotal: 3m 36s\tremaining: 14.8s\n",
            "1404:\tlearn: 1.1898747\ttotal: 3m 36s\tremaining: 14.6s\n",
            "1405:\tlearn: 1.1898672\ttotal: 3m 36s\tremaining: 14.5s\n",
            "1406:\tlearn: 1.1898493\ttotal: 3m 36s\tremaining: 14.3s\n",
            "1407:\tlearn: 1.1898425\ttotal: 3m 36s\tremaining: 14.2s\n",
            "1408:\tlearn: 1.1898196\ttotal: 3m 36s\tremaining: 14s\n",
            "1409:\tlearn: 1.1898097\ttotal: 3m 37s\tremaining: 13.9s\n",
            "1410:\tlearn: 1.1897987\ttotal: 3m 37s\tremaining: 13.7s\n",
            "1411:\tlearn: 1.1897854\ttotal: 3m 37s\tremaining: 13.5s\n",
            "1412:\tlearn: 1.1897802\ttotal: 3m 37s\tremaining: 13.4s\n",
            "1413:\tlearn: 1.1897583\ttotal: 3m 37s\tremaining: 13.2s\n",
            "1414:\tlearn: 1.1897401\ttotal: 3m 37s\tremaining: 13.1s\n",
            "1415:\tlearn: 1.1897278\ttotal: 3m 37s\tremaining: 12.9s\n",
            "1416:\tlearn: 1.1897160\ttotal: 3m 38s\tremaining: 12.8s\n",
            "1417:\tlearn: 1.1897062\ttotal: 3m 38s\tremaining: 12.6s\n",
            "1418:\tlearn: 1.1896892\ttotal: 3m 38s\tremaining: 12.5s\n",
            "1419:\tlearn: 1.1896734\ttotal: 3m 38s\tremaining: 12.3s\n",
            "1420:\tlearn: 1.1896600\ttotal: 3m 38s\tremaining: 12.2s\n",
            "1421:\tlearn: 1.1896405\ttotal: 3m 38s\tremaining: 12s\n",
            "1422:\tlearn: 1.1896326\ttotal: 3m 38s\tremaining: 11.8s\n",
            "1423:\tlearn: 1.1896178\ttotal: 3m 39s\tremaining: 11.7s\n",
            "1424:\tlearn: 1.1896092\ttotal: 3m 39s\tremaining: 11.5s\n",
            "1425:\tlearn: 1.1895992\ttotal: 3m 39s\tremaining: 11.4s\n",
            "1426:\tlearn: 1.1895863\ttotal: 3m 39s\tremaining: 11.2s\n",
            "1427:\tlearn: 1.1895703\ttotal: 3m 39s\tremaining: 11.1s\n",
            "1428:\tlearn: 1.1895490\ttotal: 3m 39s\tremaining: 10.9s\n",
            "1429:\tlearn: 1.1895299\ttotal: 3m 39s\tremaining: 10.8s\n",
            "1430:\tlearn: 1.1895190\ttotal: 3m 40s\tremaining: 10.6s\n",
            "1431:\tlearn: 1.1894868\ttotal: 3m 40s\tremaining: 10.5s\n",
            "1432:\tlearn: 1.1894629\ttotal: 3m 40s\tremaining: 10.3s\n",
            "1433:\tlearn: 1.1894454\ttotal: 3m 40s\tremaining: 10.2s\n",
            "1434:\tlearn: 1.1894212\ttotal: 3m 41s\tremaining: 10s\n",
            "1435:\tlearn: 1.1893945\ttotal: 3m 41s\tremaining: 9.86s\n",
            "1436:\tlearn: 1.1893851\ttotal: 3m 41s\tremaining: 9.71s\n",
            "1437:\tlearn: 1.1893615\ttotal: 3m 41s\tremaining: 9.56s\n",
            "1438:\tlearn: 1.1893443\ttotal: 3m 41s\tremaining: 9.41s\n",
            "1439:\tlearn: 1.1893405\ttotal: 3m 42s\tremaining: 9.25s\n",
            "1440:\tlearn: 1.1893288\ttotal: 3m 42s\tremaining: 9.1s\n",
            "1441:\tlearn: 1.1893180\ttotal: 3m 42s\tremaining: 8.94s\n",
            "1442:\tlearn: 1.1893101\ttotal: 3m 42s\tremaining: 8.79s\n",
            "1443:\tlearn: 1.1892960\ttotal: 3m 42s\tremaining: 8.63s\n",
            "1444:\tlearn: 1.1892786\ttotal: 3m 42s\tremaining: 8.48s\n",
            "1445:\tlearn: 1.1892610\ttotal: 3m 42s\tremaining: 8.32s\n",
            "1446:\tlearn: 1.1892522\ttotal: 3m 43s\tremaining: 8.17s\n",
            "1447:\tlearn: 1.1892387\ttotal: 3m 43s\tremaining: 8.02s\n",
            "1448:\tlearn: 1.1892278\ttotal: 3m 43s\tremaining: 7.86s\n",
            "1449:\tlearn: 1.1892182\ttotal: 3m 43s\tremaining: 7.71s\n",
            "1450:\tlearn: 1.1892120\ttotal: 3m 43s\tremaining: 7.55s\n",
            "1451:\tlearn: 1.1891987\ttotal: 3m 43s\tremaining: 7.4s\n",
            "1452:\tlearn: 1.1891846\ttotal: 3m 43s\tremaining: 7.24s\n",
            "1453:\tlearn: 1.1891728\ttotal: 3m 44s\tremaining: 7.09s\n",
            "1454:\tlearn: 1.1891564\ttotal: 3m 44s\tremaining: 6.93s\n",
            "1455:\tlearn: 1.1891411\ttotal: 3m 44s\tremaining: 6.78s\n",
            "1456:\tlearn: 1.1891285\ttotal: 3m 44s\tremaining: 6.63s\n",
            "1457:\tlearn: 1.1891210\ttotal: 3m 44s\tremaining: 6.47s\n",
            "1458:\tlearn: 1.1891104\ttotal: 3m 44s\tremaining: 6.32s\n",
            "1459:\tlearn: 1.1890950\ttotal: 3m 44s\tremaining: 6.16s\n",
            "1460:\tlearn: 1.1890827\ttotal: 3m 45s\tremaining: 6.01s\n",
            "1461:\tlearn: 1.1890635\ttotal: 3m 45s\tremaining: 5.85s\n",
            "1462:\tlearn: 1.1890482\ttotal: 3m 45s\tremaining: 5.7s\n",
            "1463:\tlearn: 1.1890265\ttotal: 3m 45s\tremaining: 5.55s\n",
            "1464:\tlearn: 1.1890037\ttotal: 3m 45s\tremaining: 5.39s\n",
            "1465:\tlearn: 1.1889833\ttotal: 3m 45s\tremaining: 5.24s\n",
            "1466:\tlearn: 1.1889695\ttotal: 3m 45s\tremaining: 5.08s\n",
            "1467:\tlearn: 1.1889523\ttotal: 3m 46s\tremaining: 4.93s\n",
            "1468:\tlearn: 1.1889428\ttotal: 3m 46s\tremaining: 4.77s\n",
            "1469:\tlearn: 1.1889275\ttotal: 3m 46s\tremaining: 4.62s\n",
            "1470:\tlearn: 1.1889174\ttotal: 3m 46s\tremaining: 4.47s\n",
            "1471:\tlearn: 1.1889104\ttotal: 3m 46s\tremaining: 4.31s\n",
            "1472:\tlearn: 1.1888881\ttotal: 3m 46s\tremaining: 4.16s\n",
            "1473:\tlearn: 1.1888797\ttotal: 3m 46s\tremaining: 4s\n",
            "1474:\tlearn: 1.1888700\ttotal: 3m 47s\tremaining: 3.85s\n",
            "1475:\tlearn: 1.1888576\ttotal: 3m 47s\tremaining: 3.69s\n",
            "1476:\tlearn: 1.1888478\ttotal: 3m 47s\tremaining: 3.54s\n",
            "1477:\tlearn: 1.1888391\ttotal: 3m 47s\tremaining: 3.39s\n",
            "1478:\tlearn: 1.1888194\ttotal: 3m 47s\tremaining: 3.23s\n",
            "1479:\tlearn: 1.1888039\ttotal: 3m 47s\tremaining: 3.08s\n",
            "1480:\tlearn: 1.1887974\ttotal: 3m 47s\tremaining: 2.92s\n",
            "1481:\tlearn: 1.1887815\ttotal: 3m 48s\tremaining: 2.77s\n",
            "1482:\tlearn: 1.1887758\ttotal: 3m 48s\tremaining: 2.62s\n",
            "1483:\tlearn: 1.1887611\ttotal: 3m 48s\tremaining: 2.46s\n",
            "1484:\tlearn: 1.1887572\ttotal: 3m 48s\tremaining: 2.31s\n",
            "1485:\tlearn: 1.1887446\ttotal: 3m 48s\tremaining: 2.15s\n",
            "1486:\tlearn: 1.1887363\ttotal: 3m 48s\tremaining: 2s\n",
            "1487:\tlearn: 1.1887211\ttotal: 3m 48s\tremaining: 1.85s\n",
            "1488:\tlearn: 1.1887110\ttotal: 3m 49s\tremaining: 1.69s\n",
            "1489:\tlearn: 1.1887012\ttotal: 3m 49s\tremaining: 1.54s\n",
            "1490:\tlearn: 1.1886900\ttotal: 3m 49s\tremaining: 1.38s\n",
            "1491:\tlearn: 1.1886735\ttotal: 3m 49s\tremaining: 1.23s\n",
            "1492:\tlearn: 1.1886630\ttotal: 3m 49s\tremaining: 1.08s\n",
            "1493:\tlearn: 1.1886569\ttotal: 3m 49s\tremaining: 923ms\n",
            "1494:\tlearn: 1.1886503\ttotal: 3m 49s\tremaining: 769ms\n",
            "1495:\tlearn: 1.1886370\ttotal: 3m 50s\tremaining: 615ms\n",
            "1496:\tlearn: 1.1886240\ttotal: 3m 50s\tremaining: 461ms\n",
            "1497:\tlearn: 1.1885979\ttotal: 3m 50s\tremaining: 308ms\n",
            "1498:\tlearn: 1.1885729\ttotal: 3m 50s\tremaining: 154ms\n",
            "1499:\tlearn: 1.1885539\ttotal: 3m 50s\tremaining: 0us\n",
            "Accuracy: 0.43136462093862815\n"
          ]
        }
      ],
      "source": [
        "from catboost import CatBoostClassifier\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "X = df.drop(labels =[\"RENDIMIENTO_GLOBAL\",'ID'], axis=1)  # Características\n",
        "y = df[\"RENDIMIENTO_GLOBAL\"]  # Variable objetivo\n",
        "\n",
        "# Dividir los datos en conjunto de entrenamiento y conjunto de prueba\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42 )\n",
        "\n",
        "# Crear el modelo CatBoost\n",
        "catboost_model = CatBoostClassifier(iterations=1500, learning_rate=0.1, depth=6, loss_function='MultiClass')\n",
        "\n",
        "# Entrenar el modelo\n",
        "catboost_model.fit(X_train, y_train)\n",
        "\n",
        "# Evaluar el modelo\n",
        "accuracy = catboost_model.score(X_test, y_test)\n",
        "print(\"Accuracy:\", accuracy)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "4-3vwGrJ86jA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "predictions = catboost_model.predict(test_df.drop('ID', axis=1))\n",
        "\n",
        "predictions = predictions.flatten()\n",
        "\n",
        "submit = pd.DataFrame({'ID': test_df['ID'], 'RENDIMIENTO_GLOBAL': predictions})\n",
        "\n",
        "submit['RENDIMIENTO_GLOBAL'] = submit['RENDIMIENTO_GLOBAL'].replace({\n",
        "    1: 'bajo',\n",
        "    2: 'medio-bajo',\n",
        "    3: 'medio-alto',\n",
        "    4: 'alto'\n",
        "})\n",
        "\n",
        "submit.to_csv('submission.csv', index=False)"
      ],
      "metadata": {
        "id": "gu-MN1p1vsnV"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}